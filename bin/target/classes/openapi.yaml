openapi: 3.0.1
info:
  description: "**TMF API Reference : TMF - 629 Customer Management**"
  title: Customer Management
  version: 5.0.1
servers:
- url: "{apiRoot}/tmf-api/customer/v5/"
  variables:
    apiRoot:
      default: https://serverRoot
      enum:
      - https://serverRoot
tags:
- description: Operations for Customer Resource
  name: customer
- description: Notifications for Resource Lifecycle and event notifications
  name: notification listener
- description: Endpoints to register and terminate an Event Listener
  name: events subscription
paths:
  /customer:
    get:
      description: List or find Customer objects
      operationId: listCustomer
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer_list_example:
                  $ref: '#/components/examples/Customer_list_example_response'
              schema:
                items:
                  $ref: '#/components/schemas/Customer'
                type: array
          description: Success
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: '#/components/headers/X-Result-Count'
        "400":
          content:
            application/json:
              examples:
                basic:
                  summary: Bad Request Error
                  value:
                    '@type': Error
                    code: ERR400
                    reason: Bad Request
                    message: The server could not understand the request due to invalid
                      syntax. Please correct the syntax and try again.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                basic:
                  summary: Unauthorized Error
                  value:
                    '@type': Error
                    code: ERR401
                    reason: Unauthorized
                    message: You are not authorized to access the requested resource.
                      Please provide the correct credentials.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                basic:
                  summary: Forbidden Error
                  value:
                    '@type': Error
                    code: ERR403
                    reason: Forbidden
                    message: You don't have the permission to access the requested
                      resource. It is either read-protected or not readable by the
                      server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Found Error
                  value:
                    '@type': Error
                    code: ERR404
                    reason: Not Found
                    message: The requested URL was not found on the server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                basic:
                  summary: Method Not allowed Error
                  value:
                    '@type': Error
                    code: ERR405
                    reason: Method Not allowed
                    message: The method is not allowed for the requested URL.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "500":
          content:
            application/json:
              examples:
                basic:
                  summary: Internal Server Error example
                  value:
                    '@type': Error
                    code: ERR500
                    reason: Internal Server Error
                    message: The server encountered an internal error. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "501":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Implemented Error
                  value:
                    '@type': Error
                    code: ERR501
                    reason: The requested operation is not implemented
                    message: The requested operation is not implemented. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        "503":
          content:
            application/json:
              examples:
                basic:
                  summary: Service Unavailable Error
                  value:
                    '@type': Error
                    code: ERR503
                    reason: Service Unavailable
                    message: The service is currently unavailable. Please try again
                      later.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: List or find Customer objects
      tags:
      - customer
      x-accepts:
      - application/json
      x-tags:
      - tag: customer
    post:
      description: This operation creates a Customer entity.
      operationId: createCustomer
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Customer_FVO'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer_Create_example:
                  $ref: '#/components/examples/Customer_Create_example_response'
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK/Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                basic:
                  summary: Bad Request Error
                  value:
                    '@type': Error
                    code: ERR400
                    reason: Bad Request
                    message: The server could not understand the request due to invalid
                      syntax. Please correct the syntax and try again.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                basic:
                  summary: Unauthorized Error
                  value:
                    '@type': Error
                    code: ERR401
                    reason: Unauthorized
                    message: You are not authorized to access the requested resource.
                      Please provide the correct credentials.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                basic:
                  summary: Forbidden Error
                  value:
                    '@type': Error
                    code: ERR403
                    reason: Forbidden
                    message: You don't have the permission to access the requested
                      resource. It is either read-protected or not readable by the
                      server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Found Error
                  value:
                    '@type': Error
                    code: ERR404
                    reason: Not Found
                    message: The requested URL was not found on the server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                basic:
                  summary: Method Not allowed Error
                  value:
                    '@type': Error
                    code: ERR405
                    reason: Method Not allowed
                    message: The method is not allowed for the requested URL.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json:
              examples:
                basic:
                  summary: Conflict Error
                  value:
                    '@type': Error
                    code: ERR409
                    reason: Conflict
                    message: The request could not be completed due to a conflict
                      with the current state of the target resource.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              examples:
                basic:
                  summary: Internal Server Error example
                  value:
                    '@type': Error
                    code: ERR500
                    reason: Internal Server Error
                    message: The server encountered an internal error. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "501":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Implemented Error
                  value:
                    '@type': Error
                    code: ERR501
                    reason: The requested operation is not implemented
                    message: The requested operation is not implemented. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        "503":
          content:
            application/json:
              examples:
                basic:
                  summary: Service Unavailable Error
                  value:
                    '@type': Error
                    code: ERR503
                    reason: Service Unavailable
                    message: The service is currently unavailable. Please try again
                      later.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Creates a Customer
      tags:
      - customer
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: customer
  /customer/{id}:
    delete:
      description: This operation deletes a Customer entity.
      operationId: deleteCustomer
      parameters:
      - description: Identifier of the Resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "204":
          description: Deleted
        "400":
          content:
            application/json:
              examples:
                basic:
                  summary: Bad Request Error
                  value:
                    '@type': Error
                    code: ERR400
                    reason: Bad Request
                    message: The server could not understand the request due to invalid
                      syntax. Please correct the syntax and try again.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                basic:
                  summary: Unauthorized Error
                  value:
                    '@type': Error
                    code: ERR401
                    reason: Unauthorized
                    message: You are not authorized to access the requested resource.
                      Please provide the correct credentials.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                basic:
                  summary: Forbidden Error
                  value:
                    '@type': Error
                    code: ERR403
                    reason: Forbidden
                    message: You don't have the permission to access the requested
                      resource. It is either read-protected or not readable by the
                      server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Found Error
                  value:
                    '@type': Error
                    code: ERR404
                    reason: Not Found
                    message: The requested URL was not found on the server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                basic:
                  summary: Method Not allowed Error
                  value:
                    '@type': Error
                    code: ERR405
                    reason: Method Not allowed
                    message: The method is not allowed for the requested URL.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json:
              examples:
                basic:
                  summary: Conflict Error
                  value:
                    '@type': Error
                    code: ERR409
                    reason: Conflict
                    message: The request could not be completed due to a conflict
                      with the current state of the target resource.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              examples:
                basic:
                  summary: Internal Server Error example
                  value:
                    '@type': Error
                    code: ERR500
                    reason: Internal Server Error
                    message: The server encountered an internal error. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "501":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Implemented Error
                  value:
                    '@type': Error
                    code: ERR501
                    reason: The requested operation is not implemented
                    message: The requested operation is not implemented. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        "503":
          content:
            application/json:
              examples:
                basic:
                  summary: Service Unavailable Error
                  value:
                    '@type': Error
                    code: ERR503
                    reason: Service Unavailable
                    message: The service is currently unavailable. Please try again
                      later.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Deletes a Customer
      tags:
      - customer
      x-accepts:
      - application/json
      x-tags:
      - tag: customer
    get:
      description: This operation retrieves a Customer entity. Attribute selection
        enabled for all first level attributes.
      operationId: retrieveCustomer
      parameters:
      - description: Identifier of the Resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer_retrieve_example:
                  $ref: '#/components/examples/Customer_retrieve_example_response'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Success
        "400":
          content:
            application/json:
              examples:
                basic:
                  summary: Bad Request Error
                  value:
                    '@type': Error
                    code: ERR400
                    reason: Bad Request
                    message: The server could not understand the request due to invalid
                      syntax. Please correct the syntax and try again.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                basic:
                  summary: Unauthorized Error
                  value:
                    '@type': Error
                    code: ERR401
                    reason: Unauthorized
                    message: You are not authorized to access the requested resource.
                      Please provide the correct credentials.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                basic:
                  summary: Forbidden Error
                  value:
                    '@type': Error
                    code: ERR403
                    reason: Forbidden
                    message: You don't have the permission to access the requested
                      resource. It is either read-protected or not readable by the
                      server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Found Error
                  value:
                    '@type': Error
                    code: ERR404
                    reason: Not Found
                    message: The requested URL was not found on the server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                basic:
                  summary: Method Not allowed Error
                  value:
                    '@type': Error
                    code: ERR405
                    reason: Method Not allowed
                    message: The method is not allowed for the requested URL.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "500":
          content:
            application/json:
              examples:
                basic:
                  summary: Internal Server Error example
                  value:
                    '@type': Error
                    code: ERR500
                    reason: Internal Server Error
                    message: The server encountered an internal error. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "501":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Implemented Error
                  value:
                    '@type': Error
                    code: ERR501
                    reason: The requested operation is not implemented
                    message: The requested operation is not implemented. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        "503":
          content:
            application/json:
              examples:
                basic:
                  summary: Service Unavailable Error
                  value:
                    '@type': Error
                    code: ERR503
                    reason: Service Unavailable
                    message: The service is currently unavailable. Please try again
                      later.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Retrieves a Customer by ID
      tags:
      - customer
      x-accepts:
      - application/json
      x-tags:
      - tag: customer
    patch:
      description: This operation updates partially a Customer entity.
      operationId: patchCustomer
      parameters:
      - description: Identifier of the Resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Customer_MVO'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer_Update_example_application-json_:
                  $ref: '#/components/examples/Customer_Update_example_application-json__response'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Success
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                basic:
                  summary: Bad Request Error
                  value:
                    '@type': Error
                    code: ERR400
                    reason: Bad Request
                    message: The server could not understand the request due to invalid
                      syntax. Please correct the syntax and try again.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                basic:
                  summary: Unauthorized Error
                  value:
                    '@type': Error
                    code: ERR401
                    reason: Unauthorized
                    message: You are not authorized to access the requested resource.
                      Please provide the correct credentials.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                basic:
                  summary: Forbidden Error
                  value:
                    '@type': Error
                    code: ERR403
                    reason: Forbidden
                    message: You don't have the permission to access the requested
                      resource. It is either read-protected or not readable by the
                      server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Found Error
                  value:
                    '@type': Error
                    code: ERR404
                    reason: Not Found
                    message: The requested URL was not found on the server.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                basic:
                  summary: Method Not allowed Error
                  value:
                    '@type': Error
                    code: ERR405
                    reason: Method Not allowed
                    message: The method is not allowed for the requested URL.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json:
              examples:
                basic:
                  summary: Conflict Error
                  value:
                    '@type': Error
                    code: ERR409
                    reason: Conflict
                    message: The request could not be completed due to a conflict
                      with the current state of the target resource.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json:
              examples:
                basic:
                  summary: Internal Server Error example
                  value:
                    '@type': Error
                    code: ERR500
                    reason: Internal Server Error
                    message: The server encountered an internal error. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        "501":
          content:
            application/json:
              examples:
                basic:
                  summary: Not Implemented Error
                  value:
                    '@type': Error
                    code: ERR501
                    reason: The requested operation is not implemented
                    message: The requested operation is not implemented. Please contact
                      the system administrator.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        "503":
          content:
            application/json:
              examples:
                basic:
                  summary: Service Unavailable Error
                  value:
                    '@type': Error
                    code: ERR503
                    reason: Service Unavailable
                    message: The service is currently unavailable. Please try again
                      later.
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Updates partially a Customer
      tags:
      - customer
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: customer
  /hub:
    post:
      description: Sets the communication endpoint to receive Events.
      operationId: createHub
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        "201":
          content:
            application/json:
              examples:
                basic:
                  summary: Hub example
                  value:
                    '@type': Hub
                    callback: https://host/tmf-api/specificAPIName/v5/listener/specificEventListener
              schema:
                $ref: '#/components/schemas/Hub'
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create a subscription (hub) to receive Events
      tags:
      - events subscription
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: events subscription
  /hub/{id}:
    delete:
      description: ""
      operationId: hubDelete
      parameters:
      - description: Identifier of the Resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Remove a subscription (hub) to receive Events
      tags:
      - events subscription
      x-accepts:
      - application/json
      x-tags:
      - tag: events subscription
    get:
      description: ""
      operationId: hubGet
      parameters:
      - description: Identifier of the Resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  summary: Hub example
                  value:
                    '@type': Hub
                    callback: https://host/tmf-api/specificAPIName/v5/listener/specificEventListener
              schema:
                $ref: '#/components/schemas/Hub'
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Retrieve a subscription (hub)
      tags:
      - events subscription
      x-accepts:
      - application/json
      x-tags:
      - tag: events subscription
  /listener/customerAttributeValueChangeEvent:
    post:
      description: Example of a client listener for receiving the notification CustomerAttributeValueChangeEvent
      operationId: customerAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerAttributeValueChangeEvent'
      responses:
        "204":
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity CustomerAttributeValueChangeEvent
      tags:
      - notification listener
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: notification listener
  /listener/customerCreateEvent:
    post:
      description: Example of a client listener for receiving the notification CustomerCreateEvent
      operationId: customerCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreateEvent'
      responses:
        "204":
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity CustomerCreateEvent
      tags:
      - notification listener
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: notification listener
  /listener/customerDeleteEvent:
    post:
      description: Example of a client listener for receiving the notification CustomerDeleteEvent
      operationId: customerDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerDeleteEvent'
      responses:
        "204":
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity CustomerDeleteEvent
      tags:
      - notification listener
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: notification listener
  /listener/customerStateChangeEvent:
    post:
      description: Example of a client listener for receiving the notification CustomerStateChangeEvent
      operationId: customerStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CustomerStateChangeEvent'
      responses:
        "204":
          description: Notified
        default:
          content:
            application/json:
              examples:
                basic:
                  summary: Error example
                  value:
                    '@type': Error
                    code: ERR001
                    reason: Missing information
                    message: Please provide the additional example information
                    referenceError: https://host/errors
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity CustomerStateChangeEvent
      tags:
      - notification listener
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: notification listener
components:
  examples:
    Customer_list_example_response:
      description: Here is an example of a response for retrieving multiple Customers.
      value:
      - '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Moon Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/500
          id: "500"
          name: Happy Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_retrieve_example_response:
      description: Here is an example of a response for retrieving a specific customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Moon Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/500
          id: "500"
          name: Happy Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Create_example_request:
      description: Here is an example of a request for creating a customer.
      value:
        '@type': Customer
        name: Moon Football Club
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/500
          id: "500"
          name: Happy Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Create_example_response:
      description: Here is an example of a response for creating a customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Moon Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/500
          id: "500"
          name: Happy Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Update_example_application-json__request:
      description: Here is an example of a request for creating a customer.
      value:
        '@type': Customer
        name: Sun Football Club
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
    Customer_Update_example_application-json__response:
      description: Here is an example of a response for creating a customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Sun Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Update_example_Merge__request:
      description: Here is an example of a request for creating a customer.
      value:
        '@type': Customer
        name: Sun Football Club
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
    Customer_Update_example_Merge__response:
      description: Here is an example of a response for creating a customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Sun Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Update_example_JSON-PATCH__request:
      description: Here is an example of a request for creating a customer.
      value:
      - op: replace
        path: /name
        value: Sun Football Club
      - op: replace
        path: /engagedParty
        value:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
    Customer_Update_example_JSON-PATCH__response:
      description: Here is an example of a response for creating a customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Sun Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/237
          id: "237"
          name: Another Long Distance Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: false
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Customer_Update_example_JSON-PATCH-QUERY__request:
      description: Here is an example of a request for creating a customer.
      value:
      - op: replace
        path: /contactMedium/preferred?city=Paris
        value: true
    Customer_Update_example_JSON-PATCH-QUERY__response:
      description: Here is an example of a response for creating a customer.
      value:
        '@type': Customer
        href: https://host:port/tmf-api/customerManagement/v5/customer/1140
        id: "1140"
        name: Moon Football Club
        status: Created
        engagedParty:
          '@type': PartyRef
          href: https://host:port/tmf-api/partyManagement/v5/organization/236
          id: "236"
          name: Long Distance Travellers
          '@referredType': Organization
        contactMedium:
        - '@type': PhoneContactMedium
          preferred: true
          contactType: homePhone
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          phoneNumber: 01 09 75 83 51
        - '@type': GeographicAddressContactMedium
          preferred: true
          contactType: homeAddress
          validFor:
            startDateTime: 2018-06-12T00:00:00Z
            endDateTime: 2019-01-01T00:00:00Z
          city: Paris
          country: France
          postCode: "75014"
          street1: 15 Rue des Canards
        relatedParty:
        - '@type': RelatedPartyRefOrPartyRoleRef
          role: bill receiver
          partyOrPartyRole:
            '@type': PartyRef
            href: https://host:port/tmf-api/partyManagement/v5/organization/2777
            id: "2777"
            name: John Doe (Accounting) Ltd
            '@referredType': Organization
    Create_Cusomter_Notification_Event_request:
      description: Message example for CatalogCreateEvent Notification
      value:
        '@type': CustomerCreateEvent
        eventId: 3cc17ff9-d674-4b0a-ab50-06841b1fd574
        eventTime: 2023-06-14T12:15:59.96747+02:00
        eventType: CustomerCreateEvent
        event:
          customer:
            '@type': Customer
            href: https://host:port/tmf-api/customerManagement/v5/customer/1140
            id: "1140"
            name: Moon Football Club
            status: Created
            engagedParty:
              '@type': PartyRef
              href: https://host:port/tmf-api/partyManagement/v5/organization/500
              id: "500"
              name: Happy Travellers
              '@referredType': Organization
            contactMedium:
            - '@type': PhoneContactMedium
              preferred: true
              contactType: homePhone
              validFor:
                startDateTime: 2018-06-12T00:00:00Z
                endDateTime: 2019-01-01T00:00:00Z
              phoneNumber: 01 09 75 83 51
            - '@type': GeographicAddressContactMedium
              preferred: false
              contactType: homeAddress
              validFor:
                startDateTime: 2018-06-12T00:00:00Z
                endDateTime: 2019-01-01T00:00:00Z
              city: Paris
              country: France
              postCode: "75014"
              street1: 15 Rue des Canards
            relatedParty:
            - '@type': RelatedPartyRefOrPartyRoleRef
              role: bill receiver
              partyOrPartyRole:
                '@type': PartyRef
                href: https://host:port/tmf-api/partyManagement/v5/organization/2777
                id: "2777"
                name: John Doe (Accounting) Ltd
                '@referredType': Organization
    Delete_Cusomter_Notification_Event_request:
      description: Message example for CustomerDeleteEvent Notification
      value:
        '@type': CustomerDeleteEvent
        eventId: 63749ead-f133-4c64-b2ed-3a93a2a56999
        eventTime: 2023-06-14T12:15:59.969117+02:00
        eventType: CustomerDeleteEvent
        event:
          customer:
            '@type': Customer
            id: "1140"
            href: https://host:port/tmf-api/customerManagement/v5/customer/1140
    Customer_Attribute_Value_Change_Notification_Event_request:
      description: Message example for CustomerAttributeValueChangeEvent Notification
      value:
        '@type': CustomerAttributeValueChangeEvent
        eventId: e3dac91d-a035-465f-afc5-d3b603b53ad2
        eventTime: 2018-06-12T00:00:00Z
        eventType: CustomerAttributeValueChangeEvent
        event:
          customer:
            '@type': Customer
            href: https://host:port/tmf-api/customerManagement/v5/customer/1140
            id: "1140"
            engagedParty:
              '@type': PartyRef
              href: https://host:port/tmf-api/partyManagement/v5/organization/236
              id: "236"
              name: Long Distance Travellers
              '@referredType': Organization
    Customer_State_Change_Notification_Event_request:
      description: Message example for CustomerStateChangeEvent Notification
      value:
        '@type': CustomerStateChangeEvent
        priority: high
        eventId: b14f7023-e982-4c02-a0c1-9790ee991659
        eventTime: 2023-06-14T12:15:59.969746+02:00
        eventType: CustomerStateChangeEvent
        event:
          customer:
            '@type': Customer
            href: https://host:port/tmf-api/customerManagement/v5/customer/1140
            id: "1140"
            status: CreditCheckDone
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      explode: false
      schema:
        type: integer
      style: simple
    X-Result-Count:
      description: Actual number of items returned in the response body
      explode: false
      schema:
        type: integer
      style: simple
  parameters:
    Id:
      description: Identifier of the Resource
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    Fields:
      description: Comma-separated properties to be provided in response
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    Offset:
      description: Requested index for start of resources to be provided in response
      explode: true
      in: query
      name: offset
      required: false
      schema:
        type: integer
      style: form
    Limit:
      description: Requested number of resources to be provided in response
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
  requestBodies:
    Customer_FVO:
      content:
        application/json:
          examples:
            Customer_Create_example:
              $ref: '#/components/examples/Customer_Create_example_request'
          schema:
            $ref: '#/components/schemas/Customer_FVO'
      description: The Customer to be created
      required: true
    Customer_MVO:
      content:
        application/json:
          examples:
            Customer_Update_example_application-json_:
              $ref: '#/components/examples/Customer_Update_example_application-json__request'
          schema:
            $ref: '#/components/schemas/Customer_MVO'
        application/merge-patch+json:
          examples:
            Customer_Update_example_Merge_:
              $ref: '#/components/examples/Customer_Update_example_Merge__request'
          schema:
            $ref: '#/components/schemas/Customer_MVO'
        application/json-patch+json:
          examples:
            Customer_Update_example_JSON-PATCH_:
              $ref: '#/components/examples/Customer_Update_example_JSON-PATCH__request'
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
        application/json-patch-query+json:
          examples:
            Customer_Update_example_JSON-PATCH-QUERY_:
              $ref: '#/components/examples/Customer_Update_example_JSON-PATCH-QUERY__request'
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
      description: The Customer to be patched
      required: true
    CustomerCreateEvent:
      content:
        application/json:
          examples:
            Create_Cusomter_Notification_Event:
              $ref: '#/components/examples/Create_Cusomter_Notification_Event_request'
          schema:
            $ref: '#/components/schemas/CustomerCreateEvent'
      description: Customer create Event payload
      required: true
    CustomerDeleteEvent:
      content:
        application/json:
          examples:
            Delete_Cusomter_Notification_Event:
              $ref: '#/components/examples/Delete_Cusomter_Notification_Event_request'
          schema:
            $ref: '#/components/schemas/CustomerDeleteEvent'
      description: Customer delete Event payload
      required: true
    CustomerAttributeValueChangeEvent:
      content:
        application/json:
          examples:
            Customer_Attribute_Value_Change_Notification_Event:
              $ref: '#/components/examples/Customer_Attribute_Value_Change_Notification_Event_request'
          schema:
            $ref: '#/components/schemas/CustomerAttributeValueChangeEvent'
      description: Customer attributeValueChange Event payload
      required: true
    CustomerStateChangeEvent:
      content:
        application/json:
          examples:
            Customer_State_Change_Notification_Event:
              $ref: '#/components/examples/Customer_State_Change_Notification_Event_request'
          schema:
            $ref: '#/components/schemas/CustomerStateChangeEvent'
      description: Customer stateChange Event payload
      required: true
    Hub_FVO:
      content:
        application/json:
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: https://host/tmf-api/specificAPIName/v5/listener/specificEventListener
                query: data
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      description: Data containing the callback endpoint to deliver the information
      required: true
  responses:
    "200":
      description: OK
    "202":
      description: Accepted
    "204":
      description: Deleted
    "400":
      content:
        application/json:
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: The server could not understand the request due to invalid
                  syntax. Please correct the syntax and try again.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    "401":
      content:
        application/json:
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: You are not authorized to access the requested resource.
                  Please provide the correct credentials.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    "403":
      content:
        application/json:
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: You don't have the permission to access the requested resource.
                  It is either read-protected or not readable by the server.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    "404":
      content:
        application/json:
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    "405":
      content:
        application/json:
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Method Not allowed
    "409":
      content:
        application/json:
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: The request could not be completed due to a conflict with
                  the current state of the target resource.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict
    "500":
      content:
        application/json:
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact
                  the system administrator.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
    "501":
      content:
        application/json:
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: The requested operation is not implemented. Please contact
                  the system administrator.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Implemented
    "503":
      content:
        application/json:
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Service Unavailable
    "200CustomerArray":
      content:
        application/json:
          examples:
            Customer_list_example:
              $ref: '#/components/examples/Customer_list_example_response'
          schema:
            items:
              $ref: '#/components/schemas/Customer'
            type: array
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
    "200Customer_Get":
      content:
        application/json:
          examples:
            Customer_retrieve_example:
              $ref: '#/components/examples/Customer_retrieve_example_response'
          schema:
            $ref: '#/components/schemas/Customer'
      description: Success
    "200Customer_Patch":
      content:
        application/json:
          examples:
            Customer_Update_example_application-json_:
              $ref: '#/components/examples/Customer_Update_example_application-json__response'
          schema:
            $ref: '#/components/schemas/Customer'
      description: Success
    "201Customer":
      content:
        application/json:
          examples:
            Customer_Create_example:
              $ref: '#/components/examples/Customer_Create_example_response'
          schema:
            $ref: '#/components/schemas/Customer'
      description: OK/Created
    Error:
      content:
        application/json:
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: https://host/errors
          schema:
            $ref: '#/components/schemas/Error'
      description: Error
    Hub:
      content:
        application/json:
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: https://host/tmf-api/specificAPIName/v5/listener/specificEventListener
          schema:
            $ref: '#/components/schemas/Hub'
      description: Notified
  schemas:
    AccountRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
        propertyName: '@type'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    AccountRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
        propertyName: '@type'
      type: object
    AccountRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
        propertyName: '@type'
      type: object
    Addressable:
      description: Base schema for addressable entities
      properties:
        href:
          description: Hyperlink reference
          type: string
        id:
          description: unique identifier
          type: string
      type: object
    Addressable_FVO:
      description: Base schema for addressable entities
      type: object
    Addressable_MVO:
      description: Base schema for addressable entities
      type: object
    AgreementRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
        propertyName: '@type'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    AgreementRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
        propertyName: '@type'
      type: object
    AgreementRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
        propertyName: '@type'
      type: object
    Attachment:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: "Complements the description of an element (for instance a product)\
          \ through video, pictures..."
        properties:
          name:
            description: The name of the attachment
            type: string
          description:
            description: A narrative text describing the content of the attachment
            example: Photograph of the Product
            type: string
          url:
            description: "Uniform Resource Locator, is a web page address (a subset\
              \ of URI)"
            example: https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
            type: string
          content:
            description: "The actual contents of the attachment object, if embedded,\
              \ encoded as base64"
            format: base64
            type: string
          size:
            $ref: '#/components/schemas/Quantity'
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachmentType:
            description: "a business characterization of the purpose of the attachment,\
              \ for example logo, instructionManual, contractCopy"
            type: string
          mimeType:
            description: a technical characterization of the attachment content format
              using IETF Mime Types
            type: string
        type: object
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment'
        propertyName: '@type'
    AttachmentRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      - description: "Attachment reference. An attachment complements the description\
          \ of an element (for instance a product) through video, pictures"
        properties:
          description:
            description: A narrative text describing the content of the attachment
            type: string
          url:
            description: Link to the attachment media/content
            type: string
        type: object
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
        propertyName: '@type'
    AttachmentRefOrValue:
      description: "The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the Attachment entity and not the AttachmentRefOrValue class\
        \ itself"
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/Attachment'
      - $ref: '#/components/schemas/AttachmentRef'
      type: object
      x-one-of-name: AttachmentRefOrValue
    AttachmentRefOrValue_FVO:
      description: "The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the Attachment entity and not the AttachmentRefOrValue class\
        \ itself"
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/Attachment_FVO'
      - $ref: '#/components/schemas/AttachmentRef_FVO'
      type: object
      x-one-of-name: AttachmentRefOrValueFVO
    AttachmentRefOrValue_MVO:
      description: "The polymorphic attributes @type, @schemaLocation & @referredType\
        \ are related to the Attachment entity and not the AttachmentRefOrValue class\
        \ itself"
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/Attachment_MVO'
      - $ref: '#/components/schemas/AttachmentRef_MVO'
      type: object
      x-one-of-name: AttachmentRefOrValueMVO
    AttachmentRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      - description: "Attachment reference. An attachment complements the description\
          \ of an element (for instance a product) through video, pictures"
        properties:
          description:
            description: A narrative text describing the content of the attachment
            type: string
          url:
            description: Link to the attachment media/content
            type: string
        type: object
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
        propertyName: '@type'
    AttachmentRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      - description: "Attachment reference. An attachment complements the description\
          \ of an element (for instance a product) through video, pictures"
        properties:
          description:
            description: A narrative text describing the content of the attachment
            type: string
          url:
            description: Link to the attachment media/content
            type: string
        type: object
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
        propertyName: '@type'
    Attachment_FVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: "Complements the description of an element (for instance a product)\
          \ through video, pictures..."
        properties:
          name:
            description: The name of the attachment
            type: string
          description:
            description: A narrative text describing the content of the attachment
            example: Photograph of the Product
            type: string
          url:
            description: "Uniform Resource Locator, is a web page address (a subset\
              \ of URI)"
            example: https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
            type: string
          content:
            description: "The actual contents of the attachment object, if embedded,\
              \ encoded as base64"
            format: base64
            type: string
          size:
            $ref: '#/components/schemas/Quantity'
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachmentType:
            description: "a business characterization of the purpose of the attachment,\
              \ for example logo, instructionManual, contractCopy"
            type: string
          mimeType:
            description: a technical characterization of the attachment content format
              using IETF Mime Types
            type: string
        required:
        - attachmentType
        - mimeType
        type: object
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
        propertyName: '@type'
    Attachment_MVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: "Complements the description of an element (for instance a product)\
          \ through video, pictures..."
        properties:
          name:
            description: The name of the attachment
            type: string
          description:
            description: A narrative text describing the content of the attachment
            example: Photograph of the Product
            type: string
          url:
            description: "Uniform Resource Locator, is a web page address (a subset\
              \ of URI)"
            example: https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
            type: string
          content:
            description: "The actual contents of the attachment object, if embedded,\
              \ encoded as base64"
            format: base64
            type: string
          size:
            $ref: '#/components/schemas/Quantity'
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachmentType:
            description: "a business characterization of the purpose of the attachment,\
              \ for example logo, instructionManual, contractCopy"
            type: string
          mimeType:
            description: a technical characterization of the attachment content format
              using IETF Mime Types
            type: string
        type: object
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
        propertyName: '@type'
    BaseEvent:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: Base event with common attributes.
        properties:
          event:
            $ref: '#/components/schemas/BaseEvent_allOf_event'
          eventId:
            description: The identifier of the notification.
            type: string
          eventTime:
            description: Time of the event occurrence.
            format: date-time
            type: string
          eventType:
            description: The type of the notification.
            type: string
          correlationId:
            description: The correlation id for this event.
            type: string
          domain:
            description: The domain of the event.
            type: string
          title:
            description: The title of the event.
            type: string
          description:
            description: An explanatory of the event.
            type: string
          priority:
            description: A priority.
            type: string
          timeOcurred:
            description: The time the event occurred.
            format: date-time
            type: string
        type: object
      discriminator:
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
        propertyName: '@type'
    BooleanArrayCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is an array of Boolean(s).
        properties:
          value:
            description: A characteristic which value is an array of Boolean(s).
            items:
              description: Characteristic item boolean value
              type: boolean
            type: array
        type: object
    BooleanArrayCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is an array of Boolean(s).
        properties:
          value:
            description: A characteristic which value is an array of Boolean(s).
            items:
              description: Characteristic item boolean value
              type: boolean
            type: array
        required:
        - value
        type: object
    BooleanArrayCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is an array of Boolean(s).
        properties:
          value:
            description: A characteristic which value is an array of Boolean(s).
            items:
              description: Characteristic item boolean value
              type: boolean
            type: array
        type: object
    BooleanCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a Boolean.
        properties:
          value:
            description: Value of the characteristic
            type: boolean
        type: object
    BooleanCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a Boolean.
        properties:
          value:
            description: Value of the characteristic
            type: boolean
        required:
        - value
        type: object
    BooleanCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a Boolean.
        properties:
          value:
            description: Value of the characteristic
            type: boolean
        type: object
    BusinessPartner:
      allOf:
      - $ref: '#/components/schemas/PartyRole'
      description: 'When business partner is the BusinessPartner '
      type: object
    BusinessPartner_FVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_FVO'
      description: 'When business partner is the BusinessPartner '
      type: object
    BusinessPartner_MVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_MVO'
      description: 'When business partner is the BusinessPartner '
      type: object
    Characteristic:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Describes a given characteristic of an object or entity through\
          \ a name/value pair. This is an abstract base class, the actual value is\
          \ in one of the strongly-typed subclasses : StringCharacteristic, ObjectCharacteristic,\
          \ FloatCharacteristic, BooleanCharacteristic, NumberCharacteristic, IntegerCharacteristic,\
          \ StringArrayCharacteristic, ObjectArrayCharacteristic, BooleanArrayCharacteristic,\
          \ NumberArrayCharacteristic, IntegerArrayCharacteristic..."
        properties:
          id:
            description: Unique identifier of the characteristic
            type: string
          name:
            description: Name of the characteristic
            type: string
          valueType:
            description: Data type of the value of the characteristic
            type: string
          characteristicRelationship:
            description: Collection of characteristic relationships
            items:
              $ref: '#/components/schemas/CharacteristicRelationship'
            type: array
        type: object
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
        propertyName: '@type'
      example:
        characteristicRelationship:
        - '@baseType': '@baseType'
          relationshipType: relationshipType
          '@type': '@type'
          id: id
          '@schemaLocation': '@schemaLocation'
        - '@baseType': '@baseType'
          relationshipType: relationshipType
          '@type': '@type'
          id: id
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        '@type': '@type'
        valueType: valueType
        name: name
        id: id
        '@schemaLocation': '@schemaLocation'
    CharacteristicRelationship:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Another Characteristic that is related to the current Characteristic;
        properties:
          id:
            description: Unique identifier of the characteristic
            type: string
          relationshipType:
            description: The type of relationship
            type: string
        type: object
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
        propertyName: '@type'
      example:
        '@baseType': '@baseType'
        relationshipType: relationshipType
        '@type': '@type'
        id: id
        '@schemaLocation': '@schemaLocation'
    CharacteristicRelationship_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Another Characteristic that is related to the current Characteristic;
        properties:
          id:
            description: Unique identifier of the characteristic
            type: string
          relationshipType:
            description: The type of relationship
            type: string
        required:
        - id
        - relationshipType
        type: object
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
        propertyName: '@type'
    CharacteristicRelationship_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: Another Characteristic that is related to the current Characteristic;
        properties:
          id:
            description: Unique identifier of the characteristic
            type: string
          relationshipType:
            description: The type of relationship
            type: string
        type: object
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
        propertyName: '@type'
    Characteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Describes a given characteristic of an object or entity through\
          \ a name/value pair. This is an abstract base class, the actual value is\
          \ in one of the strongly-typed subclasses : StringCharacteristic, ObjectCharacteristic,\
          \ FloatCharacteristic, BooleanCharacteristic, NumberCharacteristic, IntegerCharacteristic,\
          \ StringArrayCharacteristic, ObjectArrayCharacteristic, BooleanArrayCharacteristic,\
          \ NumberArrayCharacteristic, IntegerArrayCharacteristic..."
        properties:
          name:
            description: Name of the characteristic
            type: string
          valueType:
            description: Data type of the value of the characteristic
            type: string
          characteristicRelationship:
            description: Collection of characteristic relationships
            items:
              $ref: '#/components/schemas/CharacteristicRelationship_FVO'
            type: array
        type: object
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
        propertyName: '@type'
    Characteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "Describes a given characteristic of an object or entity through\
          \ a name/value pair. This is an abstract base class, the actual value is\
          \ in one of the strongly-typed subclasses : StringCharacteristic, ObjectCharacteristic,\
          \ FloatCharacteristic, BooleanCharacteristic, NumberCharacteristic, IntegerCharacteristic,\
          \ StringArrayCharacteristic, ObjectArrayCharacteristic, BooleanArrayCharacteristic,\
          \ NumberArrayCharacteristic, IntegerArrayCharacteristic..."
        properties:
          name:
            description: Name of the characteristic
            type: string
          valueType:
            description: Data type of the value of the characteristic
            type: string
          characteristicRelationship:
            description: Collection of characteristic relationships
            items:
              $ref: '#/components/schemas/CharacteristicRelationship_MVO'
            type: array
        type: object
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
        propertyName: '@type'
    Consumer:
      allOf:
      - $ref: '#/components/schemas/PartyRole'
      type: object
    Consumer_FVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_FVO'
      type: object
    Consumer_MVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_MVO'
      type: object
    ContactMedium:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Indicates the contact medium that could be used to contact the\
          \ party. This is an abstract base class, the actual value is in one of the\
          \ strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium,\
          \ GeographicAddressContactMedium, SocialMediaContactMedium..."
        properties:
          id:
            description: Identifier for this contact medium.
            type: string
          preferred:
            description: "If true, indicates that is the preferred contact medium"
            type: boolean
          contactType:
            description: Type of the contact medium to qualify it like pro email /
              personal email. This is not used to define the contact medium used.
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
          EmailContactMedium: '#/components/schemas/EmailContactMedium'
          FaxContactMedium: '#/components/schemas/FaxContactMedium'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium'
          SocialContactMedium: '#/components/schemas/SocialContactMedium'
        propertyName: '@type'
      example:
        '@baseType': '@baseType'
        validFor:
          startDateTime: 1985-04-12T23:20:50.52Z
          endDateTime: 1985-04-12T23:20:50.52Z
        '@type': '@type'
        contactType: contactType
        id: id
        '@schemaLocation': '@schemaLocation'
        preferred: true
    ContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Indicates the contact medium that could be used to contact the\
          \ party. This is an abstract base class, the actual value is in one of the\
          \ strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium,\
          \ GeographicAddressContactMedium, SocialMediaContactMedium..."
        properties:
          preferred:
            description: "If true, indicates that is the preferred contact medium"
            type: boolean
          contactType:
            description: Type of the contact medium to qualify it like pro email /
              personal email. This is not used to define the contact medium used.
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_FVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_FVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_FVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_FVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_FVO'
        propertyName: '@type'
    ContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "Indicates the contact medium that could be used to contact the\
          \ party. This is an abstract base class, the actual value is in one of the\
          \ strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium,\
          \ GeographicAddressContactMedium, SocialMediaContactMedium..."
        properties:
          preferred:
            description: "If true, indicates that is the preferred contact medium"
            type: boolean
          contactType:
            description: Type of the contact medium to qualify it like pro email /
              personal email. This is not used to define the contact medium used.
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_MVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_MVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_MVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_MVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_MVO'
        propertyName: '@type'
    CreditProfile:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: "Credit profile for the party (containing credit scoring, ...).\
          \ By default only the current credit profile  is retrieved. It can be used\
          \ as a list to give the party credit profiles history, the first one in\
          \ the list will be the current one."
        properties:
          creditProfileDate:
            description: The date the profile was established
            format: date-time
            type: string
          creditRiskRating:
            description: This is an integer whose value is used to rate the risk
            type: integer
          creditScore:
            description: A measure of a person or organizations creditworthiness calculated
              on the basis of a combination of factors such as their income and credit
              history
            type: integer
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
        propertyName: '@type'
      example:
        creditProfileDate: 2000-01-23T04:56:07.000+00:00
        creditScore: 6
        '@baseType': '@baseType'
        validFor:
          startDateTime: 1985-04-12T23:20:50.52Z
          endDateTime: 1985-04-12T23:20:50.52Z
        '@type': '@type'
        creditRiskRating: 0
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
    CreditProfile_MVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: "Credit profile for the party (containing credit scoring, ...).\
          \ By default only the current credit profile  is retrieved. It can be used\
          \ as a list to give the party credit profiles history, the first one in\
          \ the list will be the current one."
        properties:
          creditProfileDate:
            description: The date the profile was established
            format: date-time
            type: string
          creditRiskRating:
            description: This is an integer whose value is used to rate the risk
            type: integer
          creditScore:
            description: A measure of a person or organizations creditworthiness calculated
              on the basis of a combination of factors such as their income and credit
              history
            type: integer
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
        propertyName: '@type'
    Customer:
      allOf:
      - $ref: '#/components/schemas/PartyRole'
      example:
        contactMedium:
        - '@baseType': '@baseType'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          contactType: contactType
          id: id
          '@schemaLocation': '@schemaLocation'
          preferred: true
        - '@baseType': '@baseType'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          contactType: contactType
          id: id
          '@schemaLocation': '@schemaLocation'
          preferred: true
        creditProfile:
        - creditProfileDate: 2000-01-23T04:56:07.000+00:00
          creditScore: 6
          '@baseType': '@baseType'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          creditRiskRating: 0
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        - creditProfileDate: 2000-01-23T04:56:07.000+00:00
          creditScore: 6
          '@baseType': '@baseType'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          creditRiskRating: 0
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        role: role
        agreement:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        validFor:
          startDateTime: 1985-04-12T23:20:50.52Z
          endDateTime: 1985-04-12T23:20:50.52Z
        '@type': '@type'
        description: description
        relatedParty:
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        characteristic:
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        statusReason: statusReason
        '@baseType': '@baseType'
        partyRoleSpecification:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        name: name
        paymentMethod:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
        engagedParty:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        account:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        status: status
      type: object
    CustomerAttributeValueChangeEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - description: CustomerAttributeValueChangeEvent generic structure
        properties:
          event:
            $ref: '#/components/schemas/CustomerAttributeValueChangeEventPayload'
        type: object
      discriminator:
        mapping:
          CustomerAttributeValueChangeEvent: '#/components/schemas/CustomerAttributeValueChangeEvent'
        propertyName: '@type'
      example:
        eventId: eventId
        '@type': '@type'
        analyticCharacteristic:
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        description: description
        source:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        eventType: eventType
        title: title
        priority: priority
        relatedParty:
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        domain: domain
        eventTime: 2000-01-23T04:56:07.000+00:00
        reportingSystem:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        correlationId: correlationId
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
        event:
          customer:
            contactMedium:
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            creditProfile:
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            agreement:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            description: description
            relatedParty:
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            characteristic:
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            statusReason: statusReason
            '@baseType': '@baseType'
            partyRoleSpecification:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            name: name
            paymentMethod:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
            engagedParty:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            account:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            status: status
        timeOccurred: 2000-01-23T04:56:07.000+00:00
    CustomerAttributeValueChangeEventPayload:
      description: The event data structure
      example:
        customer:
          contactMedium:
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          creditProfile:
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          agreement:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          description: description
          relatedParty:
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          characteristic:
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          statusReason: statusReason
          '@baseType': '@baseType'
          partyRoleSpecification:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          name: name
          paymentMethod:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
          engagedParty:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          account:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          status: status
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      type: object
    CustomerCreateEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - description: CustomerCreateEvent generic structure
        properties:
          event:
            $ref: '#/components/schemas/CustomerCreateEventPayload'
        type: object
      discriminator:
        mapping:
          CustomerCreateEvent: '#/components/schemas/CustomerCreateEvent'
        propertyName: '@type'
      example:
        eventId: eventId
        '@type': '@type'
        analyticCharacteristic:
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        description: description
        source:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        eventType: eventType
        title: title
        priority: priority
        relatedParty:
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        domain: domain
        eventTime: 2000-01-23T04:56:07.000+00:00
        reportingSystem:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        correlationId: correlationId
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
        event:
          customer:
            contactMedium:
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            creditProfile:
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            agreement:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            description: description
            relatedParty:
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            characteristic:
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            statusReason: statusReason
            '@baseType': '@baseType'
            partyRoleSpecification:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            name: name
            paymentMethod:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
            engagedParty:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            account:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            status: status
        timeOccurred: 2000-01-23T04:56:07.000+00:00
    CustomerCreateEventPayload:
      description: The event data structure
      example:
        customer:
          contactMedium:
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          creditProfile:
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          agreement:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          description: description
          relatedParty:
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          characteristic:
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          statusReason: statusReason
          '@baseType': '@baseType'
          partyRoleSpecification:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          name: name
          paymentMethod:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
          engagedParty:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          account:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          status: status
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      type: object
    CustomerDeleteEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - description: CustomerDeleteEvent generic structure
        properties:
          event:
            $ref: '#/components/schemas/CustomerDeleteEventPayload'
        type: object
      discriminator:
        mapping:
          CustomerDeleteEvent: '#/components/schemas/CustomerDeleteEvent'
        propertyName: '@type'
      example:
        eventId: eventId
        '@type': '@type'
        analyticCharacteristic:
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        description: description
        source:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        eventType: eventType
        title: title
        priority: priority
        relatedParty:
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        domain: domain
        eventTime: 2000-01-23T04:56:07.000+00:00
        reportingSystem:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        correlationId: correlationId
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
        event:
          customer:
            contactMedium:
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            creditProfile:
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            agreement:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            description: description
            relatedParty:
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            characteristic:
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            statusReason: statusReason
            '@baseType': '@baseType'
            partyRoleSpecification:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            name: name
            paymentMethod:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
            engagedParty:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            account:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            status: status
        timeOccurred: 2000-01-23T04:56:07.000+00:00
    CustomerDeleteEventPayload:
      description: The event data structure
      example:
        customer:
          contactMedium:
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          creditProfile:
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          agreement:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          description: description
          relatedParty:
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          characteristic:
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          statusReason: statusReason
          '@baseType': '@baseType'
          partyRoleSpecification:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          name: name
          paymentMethod:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
          engagedParty:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          account:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          status: status
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      type: object
    CustomerStateChangeEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - description: CustomerStateChangeEvent generic structure
        properties:
          event:
            $ref: '#/components/schemas/CustomerStateChangeEventPayload'
        type: object
      discriminator:
        mapping:
          CustomerStateChangeEvent: '#/components/schemas/CustomerStateChangeEvent'
        propertyName: '@type'
      example:
        eventId: eventId
        '@type': '@type'
        analyticCharacteristic:
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        - characteristicRelationship:
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@baseType': '@baseType'
            relationshipType: relationshipType
            '@type': '@type'
            id: id
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          valueType: valueType
          name: name
          id: id
          '@schemaLocation': '@schemaLocation'
        description: description
        source:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        eventType: eventType
        title: title
        priority: priority
        relatedParty:
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        - partyOrPartyRole:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        domain: domain
        eventTime: 2000-01-23T04:56:07.000+00:00
        reportingSystem:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        correlationId: correlationId
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
        event:
          customer:
            contactMedium:
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            - '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              contactType: contactType
              id: id
              '@schemaLocation': '@schemaLocation'
              preferred: true
            creditProfile:
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - creditProfileDate: 2000-01-23T04:56:07.000+00:00
              creditScore: 6
              '@baseType': '@baseType'
              validFor:
                startDateTime: 1985-04-12T23:20:50.52Z
                endDateTime: 1985-04-12T23:20:50.52Z
              '@type': '@type'
              creditRiskRating: 0
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            agreement:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            description: description
            relatedParty:
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            - partyOrPartyRole:
                '@referredType': '@referredType'
                '@baseType': '@baseType'
                '@type': '@type'
                name: name
                href: href
                id: id
                '@schemaLocation': '@schemaLocation'
              role: role
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            characteristic:
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            - characteristicRelationship:
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              - '@baseType': '@baseType'
                relationshipType: relationshipType
                '@type': '@type'
                id: id
                '@schemaLocation': '@schemaLocation'
              '@baseType': '@baseType'
              '@type': '@type'
              valueType: valueType
              name: name
              id: id
              '@schemaLocation': '@schemaLocation'
            statusReason: statusReason
            '@baseType': '@baseType'
            partyRoleSpecification:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            name: name
            paymentMethod:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
            engagedParty:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            account:
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            status: status
        timeOccurred: 2000-01-23T04:56:07.000+00:00
    CustomerStateChangeEventPayload:
      description: The event data structure
      example:
        customer:
          contactMedium:
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          - '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            contactType: contactType
            id: id
            '@schemaLocation': '@schemaLocation'
            preferred: true
          creditProfile:
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - creditProfileDate: 2000-01-23T04:56:07.000+00:00
            creditScore: 6
            '@baseType': '@baseType'
            validFor:
              startDateTime: 1985-04-12T23:20:50.52Z
              endDateTime: 1985-04-12T23:20:50.52Z
            '@type': '@type'
            creditRiskRating: 0
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          role: role
          agreement:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          validFor:
            startDateTime: 1985-04-12T23:20:50.52Z
            endDateTime: 1985-04-12T23:20:50.52Z
          '@type': '@type'
          description: description
          relatedParty:
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          - partyOrPartyRole:
              '@referredType': '@referredType'
              '@baseType': '@baseType'
              '@type': '@type'
              name: name
              href: href
              id: id
              '@schemaLocation': '@schemaLocation'
            role: role
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          characteristic:
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          - characteristicRelationship:
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            - '@baseType': '@baseType'
              relationshipType: relationshipType
              '@type': '@type'
              id: id
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            valueType: valueType
            name: name
            id: id
            '@schemaLocation': '@schemaLocation'
          statusReason: statusReason
          '@baseType': '@baseType'
          partyRoleSpecification:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          name: name
          paymentMethod:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
          engagedParty:
            '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          account:
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          - '@referredType': '@referredType'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            href: href
            id: id
            '@schemaLocation': '@schemaLocation'
          status: status
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      type: object
    Customer_FVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_FVO'
      required:
      - engagedParty
      type: object
    Customer_MVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_MVO'
      type: object
    Disability:
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          description: Code of the disability
          type: string
        disabilityName:
          description: Name of the disability
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    EmailContactMedium:
      allOf:
      - $ref: '#/components/schemas/ContactMedium'
      - description: Describes an email that could be used to contact a party (an
          individual or an organization)
        properties:
          emailAddress:
            description: Full email address in standard format
            type: string
        type: object
    EmailContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_FVO'
      - description: Describes an email that could be used to contact a party (an
          individual or an organization)
        properties:
          emailAddress:
            description: Full email address in standard format
            type: string
        type: object
    EmailContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_MVO'
      - description: Describes an email that could be used to contact a party (an
          individual or an organization)
        properties:
          emailAddress:
            description: Full email address in standard format
            type: string
        type: object
    Entity:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - $ref: '#/components/schemas/Addressable'
      description: Base entity schema for use in TMForum Open-APIs. Property.
      type: object
    EntityRef:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - $ref: '#/components/schemas/Addressable'
      - description: Entity reference schema to be use for all entityRef class.
        properties:
          id:
            description: The identifier of the referred entity.
            type: string
          href:
            description: The URI of the referred entity.
            type: string
          name:
            description: Name of the referred entity.
            type: string
          '@referredType':
            description: The actual type of the target instance when needed for disambiguation.
            type: string
        required:
        - id
        type: object
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
    EntityRef_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - $ref: '#/components/schemas/Addressable'
      - description: Entity reference schema to be use for all entityRef class.
        properties:
          name:
            description: Name of the referred entity.
            type: string
          '@referredType':
            description: The actual type of the target instance when needed for disambiguation.
            type: string
        type: object
    EntityRef_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - $ref: '#/components/schemas/Addressable'
      - description: Entity reference schema to be use for all entityRef class.
        properties:
          name:
            description: Name of the referred entity.
            type: string
          '@referredType':
            description: The actual type of the target instance when needed for disambiguation.
            type: string
        type: object
    Entity_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      description: Base entity schema for use in TMForum Open-APIs. Property.
      type: object
    Event:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: event with common attributes.
        properties:
          href:
            description: Hyperlink reference
            type: string
          id:
            description: unique identifier
            type: string
          correlationId:
            description: The correlation id for this event.
            type: string
          domain:
            description: The domain of the event.
            type: string
          title:
            description: The title of the event.
            type: string
          description:
            description: An explanation of the event.
            type: string
          priority:
            description: A priority.
            type: string
          timeOccurred:
            description: The time the event occurred.
            format: date-time
            type: string
          source:
            $ref: '#/components/schemas/EntityRef'
          reportingSystem:
            $ref: '#/components/schemas/EntityRef'
          relatedParty:
            description: Collection of related parties
            items:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            type: array
          analyticCharacteristic:
            description: Collection of analytic characteristics
            items:
              $ref: '#/components/schemas/Characteristic'
            type: array
          eventId:
            description: The identifier of the notification.
            type: string
          eventTime:
            description: Time of the event occurrence.
            format: date-time
            type: string
          eventType:
            description: The type of the notification.
            type: string
          event:
            $ref: '#/components/schemas/BaseEvent_allOf_event'
        type: object
    Extensible:
      description: Base Extensible schema for use in TMForum Open-APIs - When used
        for in a schema it means that the Entity described by the schema  MUST be
        extended with the @type
      properties:
        '@type':
          description: "When sub-classing, this defines the sub-class Extensible name"
          type: string
        '@baseType':
          description: "When sub-classing, this defines the super-class"
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          type: string
      required:
      - '@type'
      type: object
    Extensible_MVO:
      description: Base Extensible schema for use in TMForum Open-APIs - When used
        for in a schema it means that the Entity described by the schema  MUST be
        extended with the @type
      type: object
    ExternalIdentifier:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "An identification of an entity that is owned by or originates\
          \ in a software system different from the current system, for example a\
          \ ProductOrder handed off from a commerce platform into an order handling\
          \ system. The structure identifies the system itself, the nature of the\
          \ entity within the system (e.g. class name) and the unique ID of the entity\
          \ within the system. It is anticipated that multiple external IDs can be\
          \ held for a single entity, e.g. if the entity passed through multiple systems\
          \ on the way to the current system. In this case the consumer is expected\
          \ to sequence the IDs in the array in reverse order of provenance, i.e.\
          \ most recent system first in the list."
        properties:
          owner:
            description: Name of the external system that owns the entity.
            example: MagentoCommerce
            type: string
          externalIdentifierType:
            description: "Type of the identification, typically would be the type\
              \ of the entity within the external system"
            example: ProductOrder
            type: string
          id:
            description: identification of the entity within the external system.
            type: string
        type: object
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
        propertyName: '@type'
    ExternalIdentifier_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "An identification of an entity that is owned by or originates\
          \ in a software system different from the current system, for example a\
          \ ProductOrder handed off from a commerce platform into an order handling\
          \ system. The structure identifies the system itself, the nature of the\
          \ entity within the system (e.g. class name) and the unique ID of the entity\
          \ within the system. It is anticipated that multiple external IDs can be\
          \ held for a single entity, e.g. if the entity passed through multiple systems\
          \ on the way to the current system. In this case the consumer is expected\
          \ to sequence the IDs in the array in reverse order of provenance, i.e.\
          \ most recent system first in the list."
        properties:
          owner:
            description: Name of the external system that owns the entity.
            example: MagentoCommerce
            type: string
          externalIdentifierType:
            description: "Type of the identification, typically would be the type\
              \ of the entity within the external system"
            example: ProductOrder
            type: string
        type: object
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
        propertyName: '@type'
    ExternalIdentifier_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "An identification of an entity that is owned by or originates\
          \ in a software system different from the current system, for example a\
          \ ProductOrder handed off from a commerce platform into an order handling\
          \ system. The structure identifies the system itself, the nature of the\
          \ entity within the system (e.g. class name) and the unique ID of the entity\
          \ within the system. It is anticipated that multiple external IDs can be\
          \ held for a single entity, e.g. if the entity passed through multiple systems\
          \ on the way to the current system. In this case the consumer is expected\
          \ to sequence the IDs in the array in reverse order of provenance, i.e.\
          \ most recent system first in the list."
        properties:
          owner:
            description: Name of the external system that owns the entity.
            example: MagentoCommerce
            type: string
          externalIdentifierType:
            description: "Type of the identification, typically would be the type\
              \ of the entity within the external system"
            example: ProductOrder
            type: string
        type: object
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
        propertyName: '@type'
    FaxContactMedium:
      allOf:
      - $ref: '#/components/schemas/ContactMedium'
      - description: Describes a fax that could be used to contact a party (an individual
          or an organization)
        properties:
          faxNumber:
            description: The fax number of the contact
            type: string
        type: object
    FaxContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_FVO'
      - description: Describes a fax that could be used to contact a party (an individual
          or an organization)
        properties:
          faxNumber:
            description: The fax number of the contact
            type: string
        type: object
    FaxContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_MVO'
      - description: Describes a fax that could be used to contact a party (an individual
          or an organization)
        properties:
          faxNumber:
            description: The fax number of the contact
            type: string
        type: object
    FloatCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a Float.
        properties:
          value:
            description: Value of the characteristic
            format: float
            type: number
        type: object
    FloatCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a Float.
        properties:
          value:
            description: Value of the characteristic
            format: float
            type: number
        required:
        - value
        type: object
    FloatCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a Float.
        properties:
          value:
            description: Value of the characteristic
            format: float
            type: number
        type: object
    GeographicAddressContactMedium:
      allOf:
      - $ref: '#/components/schemas/ContactMedium'
      - description: Describes a geographical address that could be used to contact
          a party (an individual or an organization)
        properties:
          city:
            description: The city
            type: string
          country:
            description: The country
            type: string
          postCode:
            description: Postcode
            type: string
          stateOrProvince:
            description: State or province
            type: string
          street1:
            description: Describes the street
            type: string
          street2:
            description: Complementary street description
            type: string
          geographicAddress:
            $ref: '#/components/schemas/GeographicAddressRef'
        type: object
    GeographicAddressContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_FVO'
      - description: Describes a geographical address that could be used to contact
          a party (an individual or an organization)
        properties:
          city:
            description: The city
            type: string
          country:
            description: The country
            type: string
          postCode:
            description: Postcode
            type: string
          stateOrProvince:
            description: State or province
            type: string
          street1:
            description: Describes the street
            type: string
          street2:
            description: Complementary street description
            type: string
          geographicAddress:
            $ref: '#/components/schemas/GeographicAddressRef_FVO'
        type: object
    GeographicAddressContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_MVO'
      - description: Describes a geographical address that could be used to contact
          a party (an individual or an organization)
        properties:
          city:
            description: The city
            type: string
          country:
            description: The country
            type: string
          postCode:
            description: Postcode
            type: string
          stateOrProvince:
            description: State or province
            type: string
          street1:
            description: Describes the street
            type: string
          street2:
            description: Complementary street description
            type: string
          geographicAddress:
            $ref: '#/components/schemas/GeographicAddressRef_MVO'
        type: object
    GeographicAddressRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: Reference to a Geographic Address.
      discriminator:
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
        propertyName: '@type'
      type: object
    GeographicAddressRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: Reference to a Geographic Address.
      discriminator:
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_FVO'
        propertyName: '@type'
      type: object
    GeographicAddressRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: Reference to a Geographic Address.
      discriminator:
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_MVO'
        propertyName: '@type'
      type: object
    Individual:
      allOf:
      - $ref: '#/components/schemas/Party'
      - description: "Individual represents a single human being (a man, woman or\
          \ child). The individual can be a customer, an employee or any other person\
          \ that the organization needs to store information about."
        properties:
          gender:
            description: Gender
            type: string
          placeOfBirth:
            description: Reference to the place where the individual was born
            type: string
          countryOfBirth:
            description: Country where the individual was born
            type: string
          nationality:
            description: Nationality
            type: string
          maritalStatus:
            description: "Marital status (married, divorced, widow ...)"
            type: string
          birthDate:
            description: Birth date
            format: date-time
            type: string
          deathDate:
            description: Date of death
            format: date-time
            type: string
          title:
            description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
              \ ..."
            type: string
          aristocraticTitle:
            description: "e.g. Baron, Graf, Earl"
            type: string
          generation:
            description: "e.g.. Sr, Jr, III (the third)"
            type: string
          preferredGivenName:
            description: "Contains the chosen name by which the individual prefers\
              \ to be addressed. Note: This name may be a name other than a given\
              \ name, such as a nickname"
            type: string
          familyNamePrefix:
            description: Family name prefix
            type: string
          legalName:
            description: Legal name or birth name (name one has for official purposes)
            type: string
          middleName:
            description: Middles name or initial
            type: string
          name:
            description: "Full name flatten (first, middle, and last names) - this\
              \ is the name that is expected to be presented in reference data types\
              \ such as PartyRef, RelatedParty, etc. that refer to Individual"
            type: string
          formattedName:
            description: "A fully formatted name in one string with all of its pieces\
              \ in their proper place and all of the necessary punctuation. Useful\
              \ for specific contexts (Chinese, Japanese, Korean)"
            type: string
          location:
            description: Temporary current location of the individual (may be used
              if the individual has approved its sharing)
            type: string
          status:
            $ref: '#/components/schemas/IndividualStateType'
          otherName:
            description: List of other names by which this individual is known
            items:
              $ref: '#/components/schemas/OtherNameIndividual'
            type: array
          individualIdentification:
            description: "List of official identifications issued to the individual,\
              \ such as passport, driving licence, social security number"
            items:
              $ref: '#/components/schemas/IndividualIdentification'
            type: array
          disability:
            description: List of disabilities suffered by the individual
            items:
              $ref: '#/components/schemas/Disability'
            type: array
          languageAbility:
            description: List of national languages known by the individual
            items:
              $ref: '#/components/schemas/LanguageAbility'
            type: array
          skill:
            description: List of skills exhibited by the individual
            items:
              $ref: '#/components/schemas/Skill'
            type: array
          familyName:
            description: Contains the non-chosen or inherited name. Also known as
              last name in the Western context
            type: string
          givenName:
            description: First name of the individual
            type: string
        type: object
    IndividualIdentification:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Represents our registration of information used as proof of\
          \ identity by an individual (passport, national identity card, drivers license,\
          \ social security number, birth certificate)"
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: "Authority which has issued the identifier, such as: social\
              \ security, town hall"
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: "Identification type (passport, national identity card, drivers\
              \ license, social security number, birth certificate)"
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        type: object
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
        propertyName: '@type'
    IndividualIdentification_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Represents our registration of information used as proof of\
          \ identity by an individual (passport, national identity card, drivers license,\
          \ social security number, birth certificate)"
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: "Authority which has issued the identifier, such as: social\
              \ security, town hall"
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: "Identification type (passport, national identity card, drivers\
              \ license, social security number, birth certificate)"
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
        type: object
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
        propertyName: '@type'
    IndividualIdentification_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "Represents our registration of information used as proof of\
          \ identity by an individual (passport, national identity card, drivers license,\
          \ social security number, birth certificate)"
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: "Authority which has issued the identifier, such as: social\
              \ security, town hall"
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: "Identification type (passport, national identity card, drivers\
              \ license, social security number, birth certificate)"
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
        type: object
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
        propertyName: '@type'
    IndividualStateType:
      description: Valid values for the lifecycle state of the individual
      enum:
      - initialized
      - validated
      - deceased
      type: string
    Individual_FVO:
      allOf:
      - $ref: '#/components/schemas/Party_FVO'
      - description: "Individual represents a single human being (a man, woman or\
          \ child). The individual can be a customer, an employee or any other person\
          \ that the organization needs to store information about."
        properties:
          gender:
            description: Gender
            type: string
          placeOfBirth:
            description: Reference to the place where the individual was born
            type: string
          countryOfBirth:
            description: Country where the individual was born
            type: string
          nationality:
            description: Nationality
            type: string
          maritalStatus:
            description: "Marital status (married, divorced, widow ...)"
            type: string
          birthDate:
            description: Birth date
            format: date-time
            type: string
          deathDate:
            description: Date of death
            format: date-time
            type: string
          title:
            description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
              \ ..."
            type: string
          aristocraticTitle:
            description: "e.g. Baron, Graf, Earl"
            type: string
          generation:
            description: "e.g.. Sr, Jr, III (the third)"
            type: string
          preferredGivenName:
            description: "Contains the chosen name by which the individual prefers\
              \ to be addressed. Note: This name may be a name other than a given\
              \ name, such as a nickname"
            type: string
          familyNamePrefix:
            description: Family name prefix
            type: string
          legalName:
            description: Legal name or birth name (name one has for official purposes)
            type: string
          middleName:
            description: Middles name or initial
            type: string
          name:
            description: "Full name flatten (first, middle, and last names) - this\
              \ is the name that is expected to be presented in reference data types\
              \ such as PartyRef, RelatedParty, etc. that refer to Individual"
            type: string
          formattedName:
            description: "A fully formatted name in one string with all of its pieces\
              \ in their proper place and all of the necessary punctuation. Useful\
              \ for specific contexts (Chinese, Japanese, Korean)"
            type: string
          location:
            description: Temporary current location of the individual (may be used
              if the individual has approved its sharing)
            type: string
          status:
            $ref: '#/components/schemas/IndividualStateType'
          otherName:
            description: List of other names by which this individual is known
            items:
              $ref: '#/components/schemas/OtherNameIndividual'
            type: array
          individualIdentification:
            description: "List of official identifications issued to the individual,\
              \ such as passport, driving licence, social security number"
            items:
              $ref: '#/components/schemas/IndividualIdentification_FVO'
            type: array
          disability:
            description: List of disabilities suffered by the individual
            items:
              $ref: '#/components/schemas/Disability'
            type: array
          languageAbility:
            description: List of national languages known by the individual
            items:
              $ref: '#/components/schemas/LanguageAbility'
            type: array
          skill:
            description: List of skills exhibited by the individual
            items:
              $ref: '#/components/schemas/Skill'
            type: array
          familyName:
            description: Contains the non-chosen or inherited name. Also known as
              last name in the Western context
            type: string
          givenName:
            description: First name of the individual
            type: string
        type: object
    Individual_MVO:
      allOf:
      - $ref: '#/components/schemas/Party_MVO'
      - description: "Individual represents a single human being (a man, woman or\
          \ child). The individual can be a customer, an employee or any other person\
          \ that the organization needs to store information about."
        properties:
          gender:
            description: Gender
            type: string
          placeOfBirth:
            description: Reference to the place where the individual was born
            type: string
          countryOfBirth:
            description: Country where the individual was born
            type: string
          nationality:
            description: Nationality
            type: string
          maritalStatus:
            description: "Marital status (married, divorced, widow ...)"
            type: string
          birthDate:
            description: Birth date
            format: date-time
            type: string
          deathDate:
            description: Date of death
            format: date-time
            type: string
          title:
            description: "Useful for titles (aristocratic, social,...) Pr, Dr, Sir,\
              \ ..."
            type: string
          aristocraticTitle:
            description: "e.g. Baron, Graf, Earl"
            type: string
          generation:
            description: "e.g.. Sr, Jr, III (the third)"
            type: string
          preferredGivenName:
            description: "Contains the chosen name by which the individual prefers\
              \ to be addressed. Note: This name may be a name other than a given\
              \ name, such as a nickname"
            type: string
          familyNamePrefix:
            description: Family name prefix
            type: string
          legalName:
            description: Legal name or birth name (name one has for official purposes)
            type: string
          middleName:
            description: Middles name or initial
            type: string
          name:
            description: "Full name flatten (first, middle, and last names) - this\
              \ is the name that is expected to be presented in reference data types\
              \ such as PartyRef, RelatedParty, etc. that refer to Individual"
            type: string
          formattedName:
            description: "A fully formatted name in one string with all of its pieces\
              \ in their proper place and all of the necessary punctuation. Useful\
              \ for specific contexts (Chinese, Japanese, Korean)"
            type: string
          location:
            description: Temporary current location of the individual (may be used
              if the individual has approved its sharing)
            type: string
          status:
            $ref: '#/components/schemas/IndividualStateType'
          otherName:
            description: List of other names by which this individual is known
            items:
              $ref: '#/components/schemas/OtherNameIndividual'
            type: array
          individualIdentification:
            description: "List of official identifications issued to the individual,\
              \ such as passport, driving licence, social security number"
            items:
              $ref: '#/components/schemas/IndividualIdentification_MVO'
            type: array
          disability:
            description: List of disabilities suffered by the individual
            items:
              $ref: '#/components/schemas/Disability'
            type: array
          languageAbility:
            description: List of national languages known by the individual
            items:
              $ref: '#/components/schemas/LanguageAbility'
            type: array
          skill:
            description: List of skills exhibited by the individual
            items:
              $ref: '#/components/schemas/Skill'
            type: array
          familyName:
            description: Contains the non-chosen or inherited name. Also known as
              last name in the Western context
            type: string
          givenName:
            description: First name of the individual
            type: string
        type: object
    IntegerArrayCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is an array of Integer(s).
        properties:
          value:
            description: A characteristic which value is an array of Integer(s).
            items:
              description: Characteristic value
              type: integer
            type: array
        type: object
    IntegerArrayCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is an array of Integer(s).
        properties:
          value:
            description: A characteristic which value is an array of Integer(s).
            items:
              description: Characteristic value
              type: integer
            type: array
        required:
        - value
        type: object
    IntegerArrayCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is an array of Integer(s).
        properties:
          value:
            description: A characteristic which value is an array of Integer(s).
            items:
              description: Characteristic value
              type: integer
            type: array
        type: object
    IntegerCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a Integer.
        properties:
          value:
            description: Value of the characteristic
            type: integer
        type: object
    IntegerCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a Integer.
        properties:
          value:
            description: Value of the characteristic
            type: integer
        required:
        - value
        type: object
    IntegerCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a Integer.
        properties:
          value:
            description: Value of the characteristic
            type: integer
        type: object
    LanguageAbility:
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          description: Language code (RFC 5646)
          type: string
        languageName:
          description: Language name
          type: string
        isFavouriteLanguage:
          description: A “true” value specifies whether the language is considered
            by the individual as his favourite one
          type: boolean
        writingProficiency:
          description: Writing proficiency evaluated for this language
          type: string
        readingProficiency:
          description: Reading proficiency evaluated for this language
          type: string
        speakingProficiency:
          description: Speaking proficiency evaluated for this language
          type: string
        listeningProficiency:
          description: Listening proficiency evaluated for this language
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    NumberArrayCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is an array of Number(s).
        properties:
          value:
            description: A characteristic which value is an array of Number(s).
            items:
              description: Characteristic value
              type: number
            type: array
        type: object
    NumberArrayCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is an array of Number(s).
        properties:
          value:
            description: A characteristic which value is an array of Number(s).
            items:
              description: Characteristic value
              type: number
            type: array
        required:
        - value
        type: object
    NumberArrayCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is an array of Number(s).
        properties:
          value:
            description: A characteristic which value is an array of Number(s).
            items:
              description: Characteristic value
              type: number
            type: array
        type: object
    NumberCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a Number.
        properties:
          value:
            description: Value of the characteristic
            type: number
        type: object
    NumberCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a Number.
        properties:
          value:
            description: Value of the characteristic
            type: number
        required:
        - value
        type: object
    NumberCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a Number.
        properties:
          value:
            description: Value of the characteristic
            type: number
        type: object
    ObjectArrayCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is an array of Object(s).
        properties:
          value:
            description: Collection of characteristic values
            items:
              description: Characteristic value
              type: object
            type: array
        type: object
    ObjectArrayCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is an array of Object(s).
        properties:
          value:
            description: Collection of characteristic values
            items:
              description: Characteristic value
              type: object
            type: array
        required:
        - value
        type: object
    ObjectArrayCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is an array of Object(s).
        properties:
          value:
            description: Collection of characteristic values
            items:
              description: Characteristic value
              type: object
            type: array
        type: object
    ObjectCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a Object.
        properties:
          value:
            $ref: '#/components/schemas/ObjectCharacteristic_allOf_value'
        type: object
    ObjectCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a Object.
        properties:
          value:
            $ref: '#/components/schemas/ObjectCharacteristic_allOf_value'
        required:
        - value
        type: object
    ObjectCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a Object.
        properties:
          value:
            $ref: '#/components/schemas/ObjectCharacteristic_allOf_value'
        type: object
    Organization:
      allOf:
      - $ref: '#/components/schemas/Party'
      - description: "Organization represents a group of people identified by shared\
          \ interests or purpose. Examples include business, department and enterprise.\
          \ Because of the complex nature of many businesses, both organizations and\
          \ organization units are represented by the same data."
        properties:
          isLegalEntity:
            description: "If value is true, the organization is a legal entity known\
              \ by a national referential."
            type: boolean
          isHeadOffice:
            description: "If value is true, the organization is the head office"
            type: boolean
          organizationType:
            description: "Type of Organization (company, department...)"
            type: string
          existsDuring:
            $ref: '#/components/schemas/TimePeriod'
          name:
            description: Organization name (department name for example)
            type: string
          nameType:
            description: "Type of the name : Co, Inc, Ltd, etc."
            type: string
          status:
            $ref: '#/components/schemas/OrganizationStateType'
          otherName:
            description: List of additional names by which the organization is known
            items:
              $ref: '#/components/schemas/OtherNameOrganization'
            type: array
          organizationIdentification:
            description: "List of official identifiers given to the organization,\
              \ for example company number in the registry of companies"
            items:
              $ref: '#/components/schemas/OrganizationIdentification'
            type: array
          organizationChildRelationship:
            description: "List of organizations that are contained within this organization.\
              \ For example if this organization is the Legal Department, the child\
              \ organizations might include Claims, Courts, Contracts"
            items:
              $ref: '#/components/schemas/OrganizationChildRelationship'
            type: array
          organizationParentRelationship:
            $ref: '#/components/schemas/OrganizationParentRelationship'
          tradingName:
            description: Name that the organization (unit) trades under
            type: string
        type: object
    OrganizationChildRelationship:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Child references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef'
        type: object
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
        propertyName: '@type'
    OrganizationChildRelationship_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Child references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef_FVO'
        type: object
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
        propertyName: '@type'
    OrganizationChildRelationship_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: Child references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef_MVO'
        type: object
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
        propertyName: '@type'
    OrganizationIdentification:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Represents our registration of information used as proof of identity
          by an organization
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: Authority which has issued the identifier (chamber of commerce...)
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: Type of identification information used to identify the company
              in a country or internationally
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        type: object
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
        propertyName: '@type'
    OrganizationIdentification_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Represents our registration of information used as proof of identity
          by an organization
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: Authority which has issued the identifier (chamber of commerce...)
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: Type of identification information used to identify the company
              in a country or internationally
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
        type: object
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
        propertyName: '@type'
    OrganizationIdentification_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: Represents our registration of information used as proof of identity
          by an organization
        properties:
          identificationId:
            description: Identifier
            type: string
          issuingAuthority:
            description: Authority which has issued the identifier (chamber of commerce...)
            type: string
          issuingDate:
            description: Date at which the identifier was issued
            format: date-time
            type: string
          identificationType:
            description: Type of identification information used to identify the company
              in a country or internationally
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
        type: object
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
        propertyName: '@type'
    OrganizationParentRelationship:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Parent references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef'
        type: object
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
        propertyName: '@type'
    OrganizationParentRelationship_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: Parent references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef_FVO'
        type: object
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
        propertyName: '@type'
    OrganizationParentRelationship_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: Parent references of an organization in a structure of organizations.
        properties:
          relationshipType:
            description: "Type of the relationship. Could be juridical, hierarchical,\
              \ geographical, functional for example."
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationRef_MVO'
        type: object
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
        propertyName: '@type'
    OrganizationRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
        propertyName: '@type'
      type: object
    OrganizationRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
        propertyName: '@type'
      type: object
    OrganizationRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
        propertyName: '@type'
      type: object
    OrganizationStateType:
      description: Valid values for the lifecycle state of the organization
      enum:
      - initialized
      - validated
      - closed
      type: string
    Organization_FVO:
      allOf:
      - $ref: '#/components/schemas/Party_FVO'
      - description: "Organization represents a group of people identified by shared\
          \ interests or purpose. Examples include business, department and enterprise.\
          \ Because of the complex nature of many businesses, both organizations and\
          \ organization units are represented by the same data."
        properties:
          isLegalEntity:
            description: "If value is true, the organization is a legal entity known\
              \ by a national referential."
            type: boolean
          isHeadOffice:
            description: "If value is true, the organization is the head office"
            type: boolean
          organizationType:
            description: "Type of Organization (company, department...)"
            type: string
          existsDuring:
            $ref: '#/components/schemas/TimePeriod'
          name:
            description: Organization name (department name for example)
            type: string
          nameType:
            description: "Type of the name : Co, Inc, Ltd, etc."
            type: string
          status:
            $ref: '#/components/schemas/OrganizationStateType'
          otherName:
            description: List of additional names by which the organization is known
            items:
              $ref: '#/components/schemas/OtherNameOrganization'
            type: array
          organizationIdentification:
            description: "List of official identifiers given to the organization,\
              \ for example company number in the registry of companies"
            items:
              $ref: '#/components/schemas/OrganizationIdentification_FVO'
            type: array
          organizationChildRelationship:
            description: "List of organizations that are contained within this organization.\
              \ For example if this organization is the Legal Department, the child\
              \ organizations might include Claims, Courts, Contracts"
            items:
              $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
            type: array
          organizationParentRelationship:
            $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
          tradingName:
            description: Name that the organization (unit) trades under
            type: string
        type: object
    Organization_MVO:
      allOf:
      - $ref: '#/components/schemas/Party_MVO'
      - description: "Organization represents a group of people identified by shared\
          \ interests or purpose. Examples include business, department and enterprise.\
          \ Because of the complex nature of many businesses, both organizations and\
          \ organization units are represented by the same data."
        properties:
          isLegalEntity:
            description: "If value is true, the organization is a legal entity known\
              \ by a national referential."
            type: boolean
          isHeadOffice:
            description: "If value is true, the organization is the head office"
            type: boolean
          organizationType:
            description: "Type of Organization (company, department...)"
            type: string
          existsDuring:
            $ref: '#/components/schemas/TimePeriod'
          name:
            description: Organization name (department name for example)
            type: string
          nameType:
            description: "Type of the name : Co, Inc, Ltd, etc."
            type: string
          status:
            $ref: '#/components/schemas/OrganizationStateType'
          otherName:
            description: List of additional names by which the organization is known
            items:
              $ref: '#/components/schemas/OtherNameOrganization_MVO'
            type: array
          organizationIdentification:
            description: "List of official identifiers given to the organization,\
              \ for example company number in the registry of companies"
            items:
              $ref: '#/components/schemas/OrganizationIdentification_MVO'
            type: array
          organizationChildRelationship:
            description: "List of organizations that are contained within this organization.\
              \ For example if this organization is the Legal Department, the child\
              \ organizations might include Claims, Courts, Contracts"
            items:
              $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
            type: array
          organizationParentRelationship:
            $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
          tradingName:
            description: Name that the organization (unit) trades under
            type: string
        type: object
    OtherNameIndividual:
      description: "Keeps track of other names, for example the old name of a woman\
        \ before marriage or an artist name."
      properties:
        title:
          description: "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
          type: string
        aristocraticTitle:
          description: "e.g. Baron, Graf, Earl, etc."
          type: string
        generation:
          description: "e.g. Sr, Jr, etc."
          type: string
        givenName:
          description: First name
          type: string
        preferredGivenName:
          description: "Contains the chosen name by which the person prefers to be\
            \ addressed. Note: This name may be a name other than a given name, such\
            \ as a nickname"
          type: string
        familyNamePrefix:
          description: Family name prefix
          type: string
        familyName:
          description: Contains the non-chosen or inherited name. Also known as last
            name in the Western context
          type: string
        legalName:
          description: Legal name or birth name (name one has for official purposes)
          type: string
        middleName:
          description: Middle name or initial
          type: string
        fullName:
          description: "Full name flatten (first, middle, and last names)"
          type: string
        formattedName:
          description: ". A fully formatted name in one string with all of its pieces\
            \ in their proper place and all of the necessary punctuation. Useful for\
            \ specific contexts (Chinese, Japanese, Korean, etc.)"
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    OtherNameOrganization:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Keeps track of other names, for example the old name of an organization."
        properties:
          tradingName:
            description: The name that the organization trades under
            type: string
          nameType:
            description: "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
            type: string
          name:
            description: Organization name (department name for example)
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
        propertyName: '@type'
    OtherNameOrganization_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "Keeps track of other names, for example the old name of an organization."
        properties:
          tradingName:
            description: The name that the organization trades under
            type: string
          nameType:
            description: "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
            type: string
          name:
            description: Organization name (department name for example)
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
        propertyName: '@type'
    Party:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: Generic and Abstract Party structure used to define commonalities
          between sub concepts of Individual and Organization.
        properties:
          externalReference:
            description: "List of identifiers of the Party in an external system,\
              \ for example when party information is imported from a commerce system"
            items:
              $ref: '#/components/schemas/ExternalIdentifier'
            type: array
          partyCharacteristic:
            description: List of additional characteristics that a Party can take
              on.
            items:
              $ref: '#/components/schemas/Characteristic'
            type: array
          taxExemptionCertificate:
            description: "List of tax exemptions granted to the party. For example,\
              \ a war veteran might have partial exemption from state tax and a full\
              \ exemption from federal tax"
            items:
              $ref: '#/components/schemas/TaxExemptionCertificate'
            type: array
          creditRating:
            description: "List of credit profiles and scores for the party, typically\
              \ received from an external credit broker"
            items:
              $ref: '#/components/schemas/PartyCreditProfile'
            type: array
          relatedParty:
            description: List of parties and/or party roles related to this party
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            type: array
          contactMedium:
            description: "List of means for contacting the party, e.g. mobile phone,\
              \ email address"
            items:
              $ref: '#/components/schemas/ContactMedium'
            type: array
        type: object
      discriminator:
        mapping:
          Party: '#/components/schemas/Party'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
        propertyName: '@type'
    PartyCreditProfile:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: An individual might be evaluated for its worthiness and this
          evaluation might be based on a credit rating given by a credit agency.
        properties:
          creditAgencyName:
            description: Name of the credit agency giving the score
            type: string
          creditAgencyType:
            description: Type of the credit agency giving the score
            type: string
          ratingReference:
            description: Reference corresponding to the credit rating
            type: string
          ratingScore:
            description: A measure of a party's creditworthiness calculated on the
              basis of a combination of factors such as their income and credit history
            format: int32
            type: integer
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
        propertyName: '@type'
    PartyCreditProfile_MVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: An individual might be evaluated for its worthiness and this
          evaluation might be based on a credit rating given by a credit agency.
        properties:
          creditAgencyName:
            description: Name of the credit agency giving the score
            type: string
          creditAgencyType:
            description: Type of the credit agency giving the score
            type: string
          ratingReference:
            description: Reference corresponding to the credit rating
            type: string
          ratingScore:
            description: A measure of a party's creditworthiness calculated on the
              basis of a combination of factors such as their income and credit history
            format: int32
            type: integer
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
        propertyName: '@type'
    PartyOrPartyRole:
      description: ""
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
          Customer: '#/components/schemas/Customer'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/PartyRef'
      - $ref: '#/components/schemas/PartyRoleRef'
      - $ref: '#/components/schemas/Individual'
      - $ref: '#/components/schemas/Organization'
      - $ref: '#/components/schemas/PartyRole'
      - $ref: '#/components/schemas/Supplier'
      - $ref: '#/components/schemas/BusinessPartner'
      - $ref: '#/components/schemas/Consumer'
      - $ref: '#/components/schemas/Producer'
      type: object
      x-one-of-name: PartyOrPartyRole
    PartyOrPartyRole_FVO:
      description: ""
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Customer: '#/components/schemas/Customer_FVO'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/PartyRef_FVO'
      - $ref: '#/components/schemas/PartyRoleRef_FVO'
      - $ref: '#/components/schemas/Individual_FVO'
      - $ref: '#/components/schemas/Organization_FVO'
      - $ref: '#/components/schemas/PartyRole_FVO'
      - $ref: '#/components/schemas/Supplier_FVO'
      - $ref: '#/components/schemas/BusinessPartner_FVO'
      - $ref: '#/components/schemas/Consumer_FVO'
      - $ref: '#/components/schemas/Producer_FVO'
      type: object
      x-one-of-name: PartyOrPartyRoleFVO
    PartyOrPartyRole_MVO:
      description: ""
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
          Customer: '#/components/schemas/Customer_MVO'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/PartyRef_MVO'
      - $ref: '#/components/schemas/PartyRoleRef_MVO'
      - $ref: '#/components/schemas/Individual_MVO'
      - $ref: '#/components/schemas/Organization_MVO'
      - $ref: '#/components/schemas/PartyRole_MVO'
      - $ref: '#/components/schemas/Supplier_MVO'
      - $ref: '#/components/schemas/BusinessPartner_MVO'
      - $ref: '#/components/schemas/Consumer_MVO'
      - $ref: '#/components/schemas/Producer_MVO'
      type: object
      x-one-of-name: PartyOrPartyRoleMVO
    PartyRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
        propertyName: '@type'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    PartyRefOrPartyRoleRef:
      description: ""
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
        propertyName: '@type'
      oneOf:
      - $ref: '#/components/schemas/PartyRef'
      - $ref: '#/components/schemas/PartyRoleRef'
      type: object
      x-one-of-name: PartyRefOrPartyRoleRef
    PartyRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
        propertyName: '@type'
      type: object
    PartyRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
        propertyName: '@type'
      type: object
    PartyRole:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: The part played by a party in a given context.
        properties:
          name:
            description: "A word, term, or phrase by which the PartyRole is known\
              \ and distinguished from other PartyRoles. It's the name of the PartyRole\
              \ unique entity."
            type: string
          description:
            description: A description of the PartyRole.
            type: string
          role:
            description: "Role played by the engagedParty in this context. As role\
              \ is defined by partyRoleSpecification, this role attribute can be used\
              \ to precise the role defined by partyRoleSpecification, or it can be\
              \ used to define the role in case there is no partyRoleSpecification."
            type: string
          engagedParty:
            $ref: '#/components/schemas/PartyRef'
          partyRoleSpecification:
            $ref: '#/components/schemas/PartyRoleSpecificationRef'
          characteristic:
            description: Describes the characteristic of a party role.
            items:
              $ref: '#/components/schemas/Characteristic'
            type: array
          account:
            description: Collection of accounts
            items:
              $ref: '#/components/schemas/AccountRef'
            type: array
          agreement:
            description: Collection of agreements
            items:
              $ref: '#/components/schemas/AgreementRef'
            type: array
          contactMedium:
            description: Collection of contact mediums
            items:
              $ref: '#/components/schemas/ContactMedium'
            type: array
          paymentMethod:
            description: Collection of payment methods
            items:
              $ref: '#/components/schemas/PaymentMethodRef'
            type: array
          creditProfile:
            description: Collection of credit profiles
            items:
              $ref: '#/components/schemas/CreditProfile'
            type: array
          relatedParty:
            description: Collection of related parties
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            type: array
          status:
            description: Used to track the lifecycle status of the party role.
            type: string
          statusReason:
            description: "A string providing an explanation on the value of the status\
              \ lifecycle. For instance if the status is Rejected, statusReason will\
              \ provide the reason for rejection."
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        type: object
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Customer: '#/components/schemas/Customer'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
        propertyName: '@type'
    PartyRoleRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      - description: Party role reference. A party role represents the part played
          by a party in a given context.
        properties:
          partyId:
            description: The identifier of the engaged party that is linked to the
              PartyRole object.
            type: string
          partyName:
            description: The name of the engaged party that is linked to the PartyRole
              object.
            type: string
        type: object
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
        propertyName: '@type'
    PartyRoleRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      - description: Party role reference. A party role represents the part played
          by a party in a given context.
        properties:
          partyId:
            description: The identifier of the engaged party that is linked to the
              PartyRole object.
            type: string
          partyName:
            description: The name of the engaged party that is linked to the PartyRole
              object.
            type: string
        type: object
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
        propertyName: '@type'
    PartyRoleRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      - description: Party role reference. A party role represents the part played
          by a party in a given context.
        properties:
          partyId:
            description: The identifier of the engaged party that is linked to the
              PartyRole object.
            type: string
          partyName:
            description: The name of the engaged party that is linked to the PartyRole
              object.
            type: string
        type: object
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
        propertyName: '@type'
    PartyRoleSpecificationRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: Party role specification reference. A party role specification
        gives additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
        propertyName: '@type'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    PartyRoleSpecificationRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: Party role specification reference. A party role specification
        gives additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
        propertyName: '@type'
      type: object
    PartyRoleSpecificationRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: Party role specification reference. A party role specification
        gives additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
        propertyName: '@type'
      type: object
    PartyRole_FVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: The part played by a party in a given context.
        properties:
          name:
            description: "A word, term, or phrase by which the PartyRole is known\
              \ and distinguished from other PartyRoles. It's the name of the PartyRole\
              \ unique entity."
            type: string
          description:
            description: A description of the PartyRole.
            type: string
          role:
            description: "Role played by the engagedParty in this context. As role\
              \ is defined by partyRoleSpecification, this role attribute can be used\
              \ to precise the role defined by partyRoleSpecification, or it can be\
              \ used to define the role in case there is no partyRoleSpecification."
            type: string
          engagedParty:
            $ref: '#/components/schemas/PartyRef_FVO'
          partyRoleSpecification:
            $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
          characteristic:
            description: Describes the characteristic of a party role.
            items:
              $ref: '#/components/schemas/Characteristic_FVO'
            type: array
          account:
            description: Collection of accounts
            items:
              $ref: '#/components/schemas/AccountRef_FVO'
            type: array
          agreement:
            description: Collection of agreements
            items:
              $ref: '#/components/schemas/AgreementRef_FVO'
            type: array
          contactMedium:
            description: Collection of contact mediums
            items:
              $ref: '#/components/schemas/ContactMedium_FVO'
            type: array
          paymentMethod:
            description: Collection of payment methods
            items:
              $ref: '#/components/schemas/PaymentMethodRef_FVO'
            type: array
          creditProfile:
            description: Collection of credit profiles
            items:
              $ref: '#/components/schemas/CreditProfile'
            type: array
          relatedParty:
            description: Collection of related parties
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            type: array
          status:
            description: Used to track the lifecycle status of the party role.
            type: string
          statusReason:
            description: "A string providing an explanation on the value of the status\
              \ lifecycle. For instance if the status is Rejected, statusReason will\
              \ provide the reason for rejection."
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        required:
        - engagedParty
        - name
        type: object
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Customer: '#/components/schemas/Customer_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
        propertyName: '@type'
    PartyRole_MVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: The part played by a party in a given context.
        properties:
          name:
            description: "A word, term, or phrase by which the PartyRole is known\
              \ and distinguished from other PartyRoles. It's the name of the PartyRole\
              \ unique entity."
            type: string
          description:
            description: A description of the PartyRole.
            type: string
          role:
            description: "Role played by the engagedParty in this context. As role\
              \ is defined by partyRoleSpecification, this role attribute can be used\
              \ to precise the role defined by partyRoleSpecification, or it can be\
              \ used to define the role in case there is no partyRoleSpecification."
            type: string
          engagedParty:
            $ref: '#/components/schemas/PartyRef_MVO'
          partyRoleSpecification:
            $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
          characteristic:
            description: Describes the characteristic of a party role.
            items:
              $ref: '#/components/schemas/Characteristic_MVO'
            type: array
          account:
            description: Collection of accounts
            items:
              $ref: '#/components/schemas/AccountRef_MVO'
            type: array
          agreement:
            description: Collection of agreements
            items:
              $ref: '#/components/schemas/AgreementRef_MVO'
            type: array
          contactMedium:
            description: Collection of contact mediums
            items:
              $ref: '#/components/schemas/ContactMedium_MVO'
            type: array
          paymentMethod:
            description: Collection of payment methods
            items:
              $ref: '#/components/schemas/PaymentMethodRef_MVO'
            type: array
          creditProfile:
            description: Collection of credit profiles
            items:
              $ref: '#/components/schemas/CreditProfile_MVO'
            type: array
          relatedParty:
            description: Collection of related parties
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            type: array
          status:
            description: Used to track the lifecycle status of the party role.
            type: string
          statusReason:
            description: "A string providing an explanation on the value of the status\
              \ lifecycle. For instance if the status is Rejected, statusReason will\
              \ provide the reason for rejection."
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
        required:
        - engagedParty
        - name
        type: object
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Customer: '#/components/schemas/Customer_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
        propertyName: '@type'
    Party_FVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: Generic and Abstract Party structure used to define commonalities
          between sub concepts of Individual and Organization.
        properties:
          externalReference:
            description: "List of identifiers of the Party in an external system,\
              \ for example when party information is imported from a commerce system"
            items:
              $ref: '#/components/schemas/ExternalIdentifier_FVO'
            type: array
          partyCharacteristic:
            description: List of additional characteristics that a Party can take
              on.
            items:
              $ref: '#/components/schemas/Characteristic_FVO'
            type: array
          taxExemptionCertificate:
            description: "List of tax exemptions granted to the party. For example,\
              \ a war veteran might have partial exemption from state tax and a full\
              \ exemption from federal tax"
            items:
              $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
            type: array
          creditRating:
            description: "List of credit profiles and scores for the party, typically\
              \ received from an external credit broker"
            items:
              $ref: '#/components/schemas/PartyCreditProfile'
            type: array
          relatedParty:
            description: List of parties and/or party roles related to this party
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            type: array
          contactMedium:
            description: "List of means for contacting the party, e.g. mobile phone,\
              \ email address"
            items:
              $ref: '#/components/schemas/ContactMedium_FVO'
            type: array
        type: object
      discriminator:
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
        propertyName: '@type'
    Party_MVO:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: Generic and Abstract Party structure used to define commonalities
          between sub concepts of Individual and Organization.
        properties:
          externalReference:
            description: "List of identifiers of the Party in an external system,\
              \ for example when party information is imported from a commerce system"
            items:
              $ref: '#/components/schemas/ExternalIdentifier_MVO'
            type: array
          partyCharacteristic:
            description: List of additional characteristics that a Party can take
              on.
            items:
              $ref: '#/components/schemas/Characteristic_MVO'
            type: array
          taxExemptionCertificate:
            description: "List of tax exemptions granted to the party. For example,\
              \ a war veteran might have partial exemption from state tax and a full\
              \ exemption from federal tax"
            items:
              $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
            type: array
          creditRating:
            description: "List of credit profiles and scores for the party, typically\
              \ received from an external credit broker"
            items:
              $ref: '#/components/schemas/PartyCreditProfile_MVO'
            type: array
          relatedParty:
            description: List of parties and/or party roles related to this party
            items:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            type: array
          contactMedium:
            description: "List of means for contacting the party, e.g. mobile phone,\
              \ email address"
            items:
              $ref: '#/components/schemas/ContactMedium_MVO'
            type: array
        type: object
      discriminator:
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
        propertyName: '@type'
    PaymentMethodRef:
      allOf:
      - $ref: '#/components/schemas/EntityRef'
      description: PaymentMethod reference. A payment method defines a specific mean
        of payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
        propertyName: '@type'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    PaymentMethodRef_FVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_FVO'
      description: PaymentMethod reference. A payment method defines a specific mean
        of payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
        propertyName: '@type'
      type: object
    PaymentMethodRef_MVO:
      allOf:
      - $ref: '#/components/schemas/EntityRef_MVO'
      description: PaymentMethod reference. A payment method defines a specific mean
        of payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
        propertyName: '@type'
      type: object
    PhoneContactMedium:
      allOf:
      - $ref: '#/components/schemas/ContactMedium'
      - description: Describes a phone number that could be used to contact a party
          (an individual or an organization)
        properties:
          phoneNumber:
            description: The phone number of the contact
            type: string
        type: object
    PhoneContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_FVO'
      - description: Describes a phone number that could be used to contact a party
          (an individual or an organization)
        properties:
          phoneNumber:
            description: The phone number of the contact
            type: string
        type: object
    PhoneContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_MVO'
      - description: Describes a phone number that could be used to contact a party
          (an individual or an organization)
        properties:
          phoneNumber:
            description: The phone number of the contact
            type: string
        type: object
    Producer:
      allOf:
      - $ref: '#/components/schemas/PartyRole'
      type: object
    Producer_FVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_FVO'
      type: object
    Producer_MVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_MVO'
      type: object
    Quantity:
      description: An amount in a given unit
      properties:
        amount:
          default: 1
          description: Numeric value in a given unit
          format: float
          type: number
        units:
          description: Unit
          type: string
      type: object
    RelatedPartyOrPartyRole:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "RelatedParty reference. A related party defines party or party\
          \ role or its reference, linked to a specific entity"
        properties:
          role:
            description: "Role played by the related party or party role in the context\
              \ of the specific entity it is linked to. Such as 'initiator', 'customer',\
              \  'salesAgent', 'user'"
            type: string
          partyOrPartyRole:
            $ref: '#/components/schemas/PartyOrPartyRole'
        type: object
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
        propertyName: '@type'
      example:
        partyOrPartyRole:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        role: role
        '@baseType': '@baseType'
        '@type': '@type'
        '@schemaLocation': '@schemaLocation'
    RelatedPartyOrPartyRole_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "RelatedParty reference. A related party defines party or party\
          \ role or its reference, linked to a specific entity"
        properties:
          role:
            description: "Role played by the related party or party role in the context\
              \ of the specific entity it is linked to. Such as 'initiator', 'customer',\
              \  'salesAgent', 'user'"
            type: string
          partyOrPartyRole:
            $ref: '#/components/schemas/PartyOrPartyRole_FVO'
        required:
        - role
        type: object
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
        propertyName: '@type'
    RelatedPartyOrPartyRole_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "RelatedParty reference. A related party defines party or party\
          \ role or its reference, linked to a specific entity"
        properties:
          role:
            description: "Role played by the related party or party role in the context\
              \ of the specific entity it is linked to. Such as 'initiator', 'customer',\
              \  'salesAgent', 'user'"
            type: string
          partyOrPartyRole:
            $ref: '#/components/schemas/PartyOrPartyRole_MVO'
        required:
        - role
        type: object
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
        propertyName: '@type'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "RelatedParty reference. A related party defines party or party\
          \ role or its reference, linked to a specific entity"
        properties:
          role:
            description: "Role played by the related party or party role in the context\
              \ of the specific entity it is linked to. Such as 'initiator', 'customer',\
              \  'salesAgent', 'user'"
            type: string
          partyOrPartyRole:
            $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
        type: object
      discriminator:
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
        propertyName: '@type'
      example:
        partyOrPartyRole:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          href: href
          id: id
          '@schemaLocation': '@schemaLocation'
        role: role
        '@baseType': '@baseType'
        '@type': '@type'
        '@schemaLocation': '@schemaLocation'
    Skill:
      description: "Skills evaluated for an individual with a level and possibly with\
        \ a limited validity when an obsolescence is defined (Ex: the first-aid certificate\
        \ first level is limited to one year and an update training is required each\
        \ year to keep the level)."
      properties:
        skillCode:
          description: Code of the skill
          type: string
        skillName:
          description: "Name of the skill, such as Java language"
          type: string
        evaluatedLevel:
          description: Level of expertise in a skill evaluated for an individual
          type: string
        comment:
          description: A free text comment linked to the evaluation done
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    SocialContactMedium:
      allOf:
      - $ref: '#/components/schemas/ContactMedium'
      - description: Describes a social media identifier that could be used to contact
          a party (an individual or an organization)
        properties:
          socialNetworkId:
            description: Identifier as a member of a social network
            type: string
        type: object
    SocialContactMedium_FVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_FVO'
      - description: Describes a social media identifier that could be used to contact
          a party (an individual or an organization)
        properties:
          socialNetworkId:
            description: Identifier as a member of a social network
            type: string
        type: object
    SocialContactMedium_MVO:
      allOf:
      - $ref: '#/components/schemas/ContactMedium_MVO'
      - description: Describes a social media identifier that could be used to contact
          a party (an individual or an organization)
        properties:
          socialNetworkId:
            description: Identifier as a member of a social network
            type: string
        type: object
    StringArrayCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is an array of String(s).
        properties:
          value:
            description: Collection of string characteristics
            items:
              description: Characteristic value
              type: string
            type: array
        type: object
    StringArrayCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is an array of String(s).
        properties:
          value:
            description: Collection of string characteristics
            items:
              description: Characteristic value
              type: string
            type: array
        required:
        - value
        type: object
    StringArrayCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is an array of String(s).
        properties:
          value:
            description: Collection of string characteristics
            items:
              description: Characteristic value
              type: string
            type: array
        type: object
    StringCharacteristic:
      allOf:
      - $ref: '#/components/schemas/Characteristic'
      - description: A characteristic which value is a String.
        properties:
          value:
            description: Value of the characteristic
            type: string
        type: object
    StringCharacteristic_FVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_FVO'
      - description: A characteristic which value is a String.
        properties:
          value:
            description: Value of the characteristic
            type: string
        required:
        - value
        type: object
    StringCharacteristic_MVO:
      allOf:
      - $ref: '#/components/schemas/Characteristic_MVO'
      - description: A characteristic which value is a String.
        properties:
          value:
            description: Value of the characteristic
            type: string
        type: object
    Supplier:
      allOf:
      - $ref: '#/components/schemas/PartyRole'
      description: 'When business partner is the Supplier '
      type: object
    Supplier_FVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_FVO'
      description: 'When business partner is the Supplier '
      type: object
    Supplier_MVO:
      allOf:
      - $ref: '#/components/schemas/PartyRole_MVO'
      description: 'When business partner is the Supplier '
      type: object
    TaxDefinition:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "Reference of a tax definition. A tax is levied by an authorized\
          \ tax jurisdiction. For example, there are many different types of tax (Federal\
          \ Tax levied by the US Government, State Tax levied by the State of California,\
          \ City Tax levied by the City of Los Angeles, etc.)."
        properties:
          id:
            description: Unique identifier of the tax.
            type: string
          name:
            description: Tax name.
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          jurisdictionName:
            description: Name of the jurisdiction that levies the tax
            example: USA
            type: string
          jurisdictionLevel:
            description: Level of the jurisdiction that levies the tax
            example: Country
            type: string
          taxType:
            description: Type of the tax.
            example: VAT
            type: string
        type: object
      discriminator:
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
        propertyName: '@type'
    TaxDefinition_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "Reference of a tax definition. A tax is levied by an authorized\
          \ tax jurisdiction. For example, there are many different types of tax (Federal\
          \ Tax levied by the US Government, State Tax levied by the State of California,\
          \ City Tax levied by the City of Los Angeles, etc.)."
        properties:
          id:
            description: Unique identifier of the tax.
            type: string
          name:
            description: Tax name.
            type: string
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          jurisdictionName:
            description: Name of the jurisdiction that levies the tax
            example: USA
            type: string
          jurisdictionLevel:
            description: Level of the jurisdiction that levies the tax
            example: Country
            type: string
          taxType:
            description: Type of the tax.
            example: VAT
            type: string
        type: object
      discriminator:
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
        propertyName: '@type'
    TaxExemptionCertificate:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "A tax exemption certificate represents a tax exemption granted\
          \ to a party (individual or organization) by a tax jurisdiction which may\
          \ be a city, state, country,... An exemption has a certificate identifier\
          \ (received from the jurisdiction that levied the tax) and a validity period.\
          \ An exemption is per tax types and determines for each type of tax what\
          \ portion of the tax is exempted (partial by percentage or complete) via\
          \ the tax definition."
        properties:
          id:
            description: Identifier of the tax exemption within list of the exemptions
            type: string
          taxDefinition:
            description: "A list of taxes that are covered by the exemption, e.g.\
              \ City Tax, State Tax. The definition would include the exemption (e.g.\
              \ for a rate exemption 0% would be a full exemption, 5% could be a partial\
              \ exemption if the actual rate was 10%)."
            items:
              $ref: '#/components/schemas/TaxDefinition'
            type: array
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          certificateNumber:
            description: Identifier of a document that shows proof of exemption from
              taxes for the taxing jurisdiction
            type: string
          issuingJurisdiction:
            description: Name of the jurisdiction that issued the exemption
            example: USA
            type: string
          reason:
            description: Reason for the tax exemption
            type: string
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        type: object
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
        propertyName: '@type'
    TaxExemptionCertificate_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - description: "A tax exemption certificate represents a tax exemption granted\
          \ to a party (individual or organization) by a tax jurisdiction which may\
          \ be a city, state, country,... An exemption has a certificate identifier\
          \ (received from the jurisdiction that levied the tax) and a validity period.\
          \ An exemption is per tax types and determines for each type of tax what\
          \ portion of the tax is exempted (partial by percentage or complete) via\
          \ the tax definition."
        properties:
          taxDefinition:
            description: "A list of taxes that are covered by the exemption, e.g.\
              \ City Tax, State Tax. The definition would include the exemption (e.g.\
              \ for a rate exemption 0% would be a full exemption, 5% could be a partial\
              \ exemption if the actual rate was 10%)."
            items:
              $ref: '#/components/schemas/TaxDefinition'
            type: array
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          certificateNumber:
            description: Identifier of a document that shows proof of exemption from
              taxes for the taxing jurisdiction
            type: string
          issuingJurisdiction:
            description: Name of the jurisdiction that issued the exemption
            example: USA
            type: string
          reason:
            description: Reason for the tax exemption
            type: string
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
        type: object
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
        propertyName: '@type'
    TaxExemptionCertificate_MVO:
      allOf:
      - $ref: '#/components/schemas/Extensible_MVO'
      - description: "A tax exemption certificate represents a tax exemption granted\
          \ to a party (individual or organization) by a tax jurisdiction which may\
          \ be a city, state, country,... An exemption has a certificate identifier\
          \ (received from the jurisdiction that levied the tax) and a validity period.\
          \ An exemption is per tax types and determines for each type of tax what\
          \ portion of the tax is exempted (partial by percentage or complete) via\
          \ the tax definition."
        properties:
          taxDefinition:
            description: "A list of taxes that are covered by the exemption, e.g.\
              \ City Tax, State Tax. The definition would include the exemption (e.g.\
              \ for a rate exemption 0% would be a full exemption, 5% could be a partial\
              \ exemption if the actual rate was 10%)."
            items:
              $ref: '#/components/schemas/TaxDefinition_MVO'
            type: array
          validFor:
            $ref: '#/components/schemas/TimePeriod'
          certificateNumber:
            description: Identifier of a document that shows proof of exemption from
              taxes for the taxing jurisdiction
            type: string
          issuingJurisdiction:
            description: Name of the jurisdiction that issued the exemption
            example: USA
            type: string
          reason:
            description: Reason for the tax exemption
            type: string
          attachment:
            $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
        type: object
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
        propertyName: '@type'
    TimePeriod:
      description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
      example:
        startDateTime: 1985-04-12T23:20:50.52Z
        endDateTime: 1985-04-12T23:20:50.52Z
      properties:
        startDateTime:
          description: "Start of the time period, using IETC-RFC-3339 format"
          example: 1985-04-12T23:20:50.52Z
          format: date-time
          type: string
        endDateTime:
          description: "End of the time period, using IETC-RFC-3339 format"
          example: 1985-04-12T23:20:50.52Z
          format: date-time
          type: string
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - properties:
          code:
            description: "Application relevant detail, defined in the API or a common\
              \ list."
            type: string
          reason:
            description: Explanation of the reason for the error which can be shown
              to a client user.
            type: string
          message:
            description: More details and corrective actions related to the error
              which can be shown to a client user.
            type: string
          status:
            description: HTTP Error code extension
            type: string
          referenceError:
            description: URI of documentation describing the error.
            type: string
        required:
        - code
        - reason
        type: object
      description: "Used when an API throws an Error, typically with a HTTP error\
        \ response-code (3xx, 4xx, 5xx)"
      discriminator:
        mapping:
          Error: '#/components/schemas/Error'
        propertyName: '@type'
      example:
        reason: reason
        code: code
        '@baseType': '@baseType'
        '@type': '@type'
        '@schemaLocation': '@schemaLocation'
        message: message
        referenceError: referenceError
        status: status
    Hub_FVO:
      allOf:
      - $ref: '#/components/schemas/Extensible'
      - properties:
          callback:
            description: The callback being registered.
            type: string
          query:
            description: additional data to be passed
            type: string
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
      required:
      - callback
      type: object
    Hub:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          id:
            description: Id of the listener
            type: string
          callback:
            description: The callback being registered.
            type: string
          query:
            description: additional data to be passed
            type: string
        required:
        - callback
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
      example:
        '@baseType': '@baseType'
        '@type': '@type'
        query: query
        callback: callback
        href: href
        id: id
        '@schemaLocation': '@schemaLocation'
      type: object
    JsonPatch:
      description: A JSONPatch document as defined by RFC 6902
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          type: string
        path:
          description: A JSON-Pointer
          type: string
        value:
          description: The value to be used within the operations.
        from:
          description: A string containing a JSON Pointer value.
          type: string
      required:
      - op
      - path
      type: object
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      items:
        $ref: '#/components/schemas/JsonPatch'
      type: array
    BaseEvent_allOf_event:
      description: The event linked to the involved resource object
      type: object
    ObjectCharacteristic_allOf_value:
      description: Value of the characteristic
      type: object
  securitySchemes: {}
