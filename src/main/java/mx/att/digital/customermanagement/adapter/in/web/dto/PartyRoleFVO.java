package mx.att.digital.customermanagement.adapter.in.web.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PartyRoleFVO
 */

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = BusinessPartnerFVO.class, name = "BusinessPartner"),
  @JsonSubTypes.Type(value = ConsumerFVO.class, name = "Consumer"),
  @JsonSubTypes.Type(value = CustomerFVO.class, name = "Customer"),
  @JsonSubTypes.Type(value = PartyRoleFVO.class, name = "PartyRole"),
  @JsonSubTypes.Type(value = ProducerFVO.class, name = "Producer"),
  @JsonSubTypes.Type(value = SupplierFVO.class, name = "Supplier")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.10.0")
public class PartyRoleFVO implements Serializable, PartyOrPartyRoleFVO {

  private static final long serialVersionUID = 1L;

  private String atType;

  private String atBaseType;

  private String atSchemaLocation;

  private String href;

  private String id;

  private String name;

  private String description;

  private String role;

  private EntityRefFVO engagedParty;

  private EntityRefFVO partyRoleSpecification;

  @Valid
  private List<CharacteristicFVO> characteristic = new ArrayList<>();

  @Valid
  private List<@Valid EntityRefFVO> account = new ArrayList<>();

  @Valid
  private List<@Valid EntityRefFVO> agreement = new ArrayList<>();

  @Valid
  private List<ContactMediumFVO> contactMedium = new ArrayList<>();

  @Valid
  private List<@Valid EntityRefFVO> paymentMethod = new ArrayList<>();

  @Valid
  private List<CreditProfile> creditProfile = new ArrayList<>();

  @Valid
  private List<RelatedPartyOrPartyRoleFVO> relatedParty = new ArrayList<>();

  private String status;

  private String statusReason;

  private TimePeriod validFor;

  public PartyRoleFVO() {
    super();
  }

  /**
   * Constructor with only required parameters
   */
  public PartyRoleFVO(String atType, String name, EntityRefFVO engagedParty) {
    this.atType = atType;
    this.name = name;
    this.engagedParty = engagedParty;
  }

  public PartyRoleFVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
   */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("@type")
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public PartyRoleFVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
   */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("@baseType")
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public PartyRoleFVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
   */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("@schemaLocation")
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public PartyRoleFVO href(String href) {
    this.href = href;
    return this;
  }

  /**
   * Hyperlink reference
   * @return href
   */
  
  @Schema(name = "href", description = "Hyperlink reference", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("href")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public PartyRoleFVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
   */
  
  @Schema(name = "id", description = "unique identifier", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PartyRoleFVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.
   * @return name
   */
  @NotNull 
  @Schema(name = "name", description = "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PartyRoleFVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of the PartyRole.
   * @return description
   */
  
  @Schema(name = "description", description = "A description of the PartyRole.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PartyRoleFVO role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.
   * @return role
   */
  
  @Schema(name = "role", description = "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("role")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public PartyRoleFVO engagedParty(EntityRefFVO engagedParty) {
    this.engagedParty = engagedParty;
    return this;
  }

  /**
   * A Party reference
   * @return engagedParty
   */
  @NotNull @Valid 
  @Schema(name = "engagedParty", description = "A Party reference", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("engagedParty")
  public EntityRefFVO getEngagedParty() {
    return engagedParty;
  }

  public void setEngagedParty(EntityRefFVO engagedParty) {
    this.engagedParty = engagedParty;
  }

  public PartyRoleFVO partyRoleSpecification(EntityRefFVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
    return this;
  }

  /**
   * Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.
   * @return partyRoleSpecification
   */
  @Valid 
  @Schema(name = "partyRoleSpecification", description = "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("partyRoleSpecification")
  public EntityRefFVO getPartyRoleSpecification() {
    return partyRoleSpecification;
  }

  public void setPartyRoleSpecification(EntityRefFVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
  }

  public PartyRoleFVO characteristic(List<CharacteristicFVO> characteristic) {
    this.characteristic = characteristic;
    return this;
  }

  public PartyRoleFVO addCharacteristicItem(CharacteristicFVO characteristicItem) {
    if (this.characteristic == null) {
      this.characteristic = new ArrayList<>();
    }
    this.characteristic.add(characteristicItem);
    return this;
  }

  /**
   * Describes the characteristic of a party role.
   * @return characteristic
   */
  @Valid 
  @Schema(name = "characteristic", description = "Describes the characteristic of a party role.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("characteristic")
  public List<CharacteristicFVO> getCharacteristic() {
    return characteristic;
  }

  public void setCharacteristic(List<CharacteristicFVO> characteristic) {
    this.characteristic = characteristic;
  }

  public PartyRoleFVO account(List<@Valid EntityRefFVO> account) {
    this.account = account;
    return this;
  }

  public PartyRoleFVO addAccountItem(EntityRefFVO accountItem) {
    if (this.account == null) {
      this.account = new ArrayList<>();
    }
    this.account.add(accountItem);
    return this;
  }

  /**
   * Collection of accounts
   * @return account
   */
  @Valid 
  @Schema(name = "account", description = "Collection of accounts", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("account")
  public List<@Valid EntityRefFVO> getAccount() {
    return account;
  }

  public void setAccount(List<@Valid EntityRefFVO> account) {
    this.account = account;
  }

  public PartyRoleFVO agreement(List<@Valid EntityRefFVO> agreement) {
    this.agreement = agreement;
    return this;
  }

  public PartyRoleFVO addAgreementItem(EntityRefFVO agreementItem) {
    if (this.agreement == null) {
      this.agreement = new ArrayList<>();
    }
    this.agreement.add(agreementItem);
    return this;
  }

  /**
   * Collection of agreements
   * @return agreement
   */
  @Valid 
  @Schema(name = "agreement", description = "Collection of agreements", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("agreement")
  public List<@Valid EntityRefFVO> getAgreement() {
    return agreement;
  }

  public void setAgreement(List<@Valid EntityRefFVO> agreement) {
    this.agreement = agreement;
  }

  public PartyRoleFVO contactMedium(List<ContactMediumFVO> contactMedium) {
    this.contactMedium = contactMedium;
    return this;
  }

  public PartyRoleFVO addContactMediumItem(ContactMediumFVO contactMediumItem) {
    if (this.contactMedium == null) {
      this.contactMedium = new ArrayList<>();
    }
    this.contactMedium.add(contactMediumItem);
    return this;
  }

  /**
   * Collection of contact mediums
   * @return contactMedium
   */
  @Valid 
  @Schema(name = "contactMedium", description = "Collection of contact mediums", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("contactMedium")
  public List<ContactMediumFVO> getContactMedium() {
    return contactMedium;
  }

  public void setContactMedium(List<ContactMediumFVO> contactMedium) {
    this.contactMedium = contactMedium;
  }

  public PartyRoleFVO paymentMethod(List<@Valid EntityRefFVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public PartyRoleFVO addPaymentMethodItem(EntityRefFVO paymentMethodItem) {
    if (this.paymentMethod == null) {
      this.paymentMethod = new ArrayList<>();
    }
    this.paymentMethod.add(paymentMethodItem);
    return this;
  }

  /**
   * Collection of payment methods
   * @return paymentMethod
   */
  @Valid 
  @Schema(name = "paymentMethod", description = "Collection of payment methods", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("paymentMethod")
  public List<@Valid EntityRefFVO> getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(List<@Valid EntityRefFVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public PartyRoleFVO creditProfile(List<CreditProfile> creditProfile) {
    this.creditProfile = creditProfile;
    return this;
  }

  public PartyRoleFVO addCreditProfileItem(CreditProfile creditProfileItem) {
    if (this.creditProfile == null) {
      this.creditProfile = new ArrayList<>();
    }
    this.creditProfile.add(creditProfileItem);
    return this;
  }

  /**
   * Collection of credit profiles
   * @return creditProfile
   */
  @Valid 
  @Schema(name = "creditProfile", description = "Collection of credit profiles", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("creditProfile")
  public List<CreditProfile> getCreditProfile() {
    return creditProfile;
  }

  public void setCreditProfile(List<CreditProfile> creditProfile) {
    this.creditProfile = creditProfile;
  }

  public PartyRoleFVO relatedParty(List<RelatedPartyOrPartyRoleFVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public PartyRoleFVO addRelatedPartyItem(RelatedPartyOrPartyRoleFVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Collection of related parties
   * @return relatedParty
   */
  @Valid 
  @Schema(name = "relatedParty", description = "Collection of related parties", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("relatedParty")
  public List<RelatedPartyOrPartyRoleFVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyOrPartyRoleFVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public PartyRoleFVO status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Used to track the lifecycle status of the party role.
   * @return status
   */
  
  @Schema(name = "status", description = "Used to track the lifecycle status of the party role.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public PartyRoleFVO statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.
   * @return statusReason
   */
  
  @Schema(name = "statusReason", description = "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("statusReason")
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }

  public PartyRoleFVO validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
   */
  @Valid 
  @Schema(name = "validFor", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("validFor")
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartyRoleFVO partyRoleFVO = (PartyRoleFVO) o;
    return Objects.equals(this.atType, partyRoleFVO.atType) &&
        Objects.equals(this.atBaseType, partyRoleFVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, partyRoleFVO.atSchemaLocation) &&
        Objects.equals(this.href, partyRoleFVO.href) &&
        Objects.equals(this.id, partyRoleFVO.id) &&
        Objects.equals(this.name, partyRoleFVO.name) &&
        Objects.equals(this.description, partyRoleFVO.description) &&
        Objects.equals(this.role, partyRoleFVO.role) &&
        Objects.equals(this.engagedParty, partyRoleFVO.engagedParty) &&
        Objects.equals(this.partyRoleSpecification, partyRoleFVO.partyRoleSpecification) &&
        Objects.equals(this.characteristic, partyRoleFVO.characteristic) &&
        Objects.equals(this.account, partyRoleFVO.account) &&
        Objects.equals(this.agreement, partyRoleFVO.agreement) &&
        Objects.equals(this.contactMedium, partyRoleFVO.contactMedium) &&
        Objects.equals(this.paymentMethod, partyRoleFVO.paymentMethod) &&
        Objects.equals(this.creditProfile, partyRoleFVO.creditProfile) &&
        Objects.equals(this.relatedParty, partyRoleFVO.relatedParty) &&
        Objects.equals(this.status, partyRoleFVO.status) &&
        Objects.equals(this.statusReason, partyRoleFVO.statusReason) &&
        Objects.equals(this.validFor, partyRoleFVO.validFor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, href, id, name, description, role, engagedParty, partyRoleSpecification, characteristic, account, agreement, contactMedium, paymentMethod, creditProfile, relatedParty, status, statusReason, validFor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartyRoleFVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    engagedParty: ").append(toIndentedString(engagedParty)).append("\n");
    sb.append("    partyRoleSpecification: ").append(toIndentedString(partyRoleSpecification)).append("\n");
    sb.append("    characteristic: ").append(toIndentedString(characteristic)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    agreement: ").append(toIndentedString(agreement)).append("\n");
    sb.append("    contactMedium: ").append(toIndentedString(contactMedium)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    creditProfile: ").append(toIndentedString(creditProfile)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

